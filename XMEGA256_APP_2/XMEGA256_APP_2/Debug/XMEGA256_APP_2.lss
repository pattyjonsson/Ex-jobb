
XMEGA256_APP_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000174e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  000017c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000005a  00802000  00802000  000017c2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000017c2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000044  00000000  00000000  000017f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000318  00000000  00000000  00001838  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00009f40  00000000  00000000  00001b50  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00004354  00000000  00000000  0000ba90  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00004862  00000000  00000000  0000fde4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001314  00000000  00000000  00014648  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0002f714  00000000  00000000  0001595c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000373f  00000000  00000000  00045070  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000280  00000000  00000000  000487af  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000af9f  00000000  00000000  00048a2f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	fd c0       	rjmp	.+506    	; 0x1fc <__ctors_end>
       2:	00 00       	nop
       4:	1c c1       	rjmp	.+568    	; 0x23e <__bad_interrupt>
       6:	00 00       	nop
       8:	1a c1       	rjmp	.+564    	; 0x23e <__bad_interrupt>
       a:	00 00       	nop
       c:	18 c1       	rjmp	.+560    	; 0x23e <__bad_interrupt>
       e:	00 00       	nop
      10:	16 c1       	rjmp	.+556    	; 0x23e <__bad_interrupt>
      12:	00 00       	nop
      14:	14 c1       	rjmp	.+552    	; 0x23e <__bad_interrupt>
      16:	00 00       	nop
      18:	12 c1       	rjmp	.+548    	; 0x23e <__bad_interrupt>
      1a:	00 00       	nop
      1c:	10 c1       	rjmp	.+544    	; 0x23e <__bad_interrupt>
      1e:	00 00       	nop
      20:	0e c1       	rjmp	.+540    	; 0x23e <__bad_interrupt>
      22:	00 00       	nop
      24:	0c c1       	rjmp	.+536    	; 0x23e <__bad_interrupt>
      26:	00 00       	nop
      28:	0a c1       	rjmp	.+532    	; 0x23e <__bad_interrupt>
      2a:	00 00       	nop
      2c:	08 c1       	rjmp	.+528    	; 0x23e <__bad_interrupt>
      2e:	00 00       	nop
      30:	06 c1       	rjmp	.+524    	; 0x23e <__bad_interrupt>
      32:	00 00       	nop
      34:	04 c1       	rjmp	.+520    	; 0x23e <__bad_interrupt>
      36:	00 00       	nop
      38:	c8 c3       	rjmp	.+1936   	; 0x7ca <__vector_14>
      3a:	00 00       	nop
      3c:	f3 c3       	rjmp	.+2022   	; 0x824 <__vector_15>
      3e:	00 00       	nop
      40:	1e c4       	rjmp	.+2108   	; 0x87e <__vector_16>
      42:	00 00       	nop
      44:	49 c4       	rjmp	.+2194   	; 0x8d8 <__vector_17>
      46:	00 00       	nop
      48:	74 c4       	rjmp	.+2280   	; 0x932 <__vector_18>
      4a:	00 00       	nop
      4c:	9f c4       	rjmp	.+2366   	; 0x98c <__vector_19>
      4e:	00 00       	nop
      50:	ca c4       	rjmp	.+2452   	; 0x9e6 <__vector_20>
      52:	00 00       	nop
      54:	f5 c4       	rjmp	.+2538   	; 0xa40 <__vector_21>
      56:	00 00       	nop
      58:	20 c5       	rjmp	.+2624   	; 0xa9a <__vector_22>
      5a:	00 00       	nop
      5c:	4b c5       	rjmp	.+2710   	; 0xaf4 <__vector_23>
      5e:	00 00       	nop
      60:	ee c0       	rjmp	.+476    	; 0x23e <__bad_interrupt>
      62:	00 00       	nop
      64:	ec c0       	rjmp	.+472    	; 0x23e <__bad_interrupt>
      66:	00 00       	nop
      68:	ea c0       	rjmp	.+468    	; 0x23e <__bad_interrupt>
      6a:	00 00       	nop
      6c:	e8 c0       	rjmp	.+464    	; 0x23e <__bad_interrupt>
      6e:	00 00       	nop
      70:	e6 c0       	rjmp	.+460    	; 0x23e <__bad_interrupt>
      72:	00 00       	nop
      74:	e4 c0       	rjmp	.+456    	; 0x23e <__bad_interrupt>
      76:	00 00       	nop
      78:	e2 c0       	rjmp	.+452    	; 0x23e <__bad_interrupt>
      7a:	00 00       	nop
      7c:	e0 c0       	rjmp	.+448    	; 0x23e <__bad_interrupt>
      7e:	00 00       	nop
      80:	de c0       	rjmp	.+444    	; 0x23e <__bad_interrupt>
      82:	00 00       	nop
      84:	dc c0       	rjmp	.+440    	; 0x23e <__bad_interrupt>
      86:	00 00       	nop
      88:	da c0       	rjmp	.+436    	; 0x23e <__bad_interrupt>
      8a:	00 00       	nop
      8c:	d8 c0       	rjmp	.+432    	; 0x23e <__bad_interrupt>
      8e:	00 00       	nop
      90:	d6 c0       	rjmp	.+428    	; 0x23e <__bad_interrupt>
      92:	00 00       	nop
      94:	d4 c0       	rjmp	.+424    	; 0x23e <__bad_interrupt>
      96:	00 00       	nop
      98:	d2 c0       	rjmp	.+420    	; 0x23e <__bad_interrupt>
      9a:	00 00       	nop
      9c:	ce c2       	rjmp	.+1436   	; 0x63a <__vector_39>
      9e:	00 00       	nop
      a0:	fe c2       	rjmp	.+1532   	; 0x69e <__vector_40>
      a2:	00 00       	nop
      a4:	2e c3       	rjmp	.+1628   	; 0x702 <__vector_41>
      a6:	00 00       	nop
      a8:	5e c3       	rjmp	.+1724   	; 0x766 <__vector_42>
      aa:	00 00       	nop
      ac:	c8 c0       	rjmp	.+400    	; 0x23e <__bad_interrupt>
      ae:	00 00       	nop
      b0:	c6 c0       	rjmp	.+396    	; 0x23e <__bad_interrupt>
      b2:	00 00       	nop
      b4:	c4 c0       	rjmp	.+392    	; 0x23e <__bad_interrupt>
      b6:	00 00       	nop
      b8:	c2 c0       	rjmp	.+388    	; 0x23e <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0a c7       	rjmp	.+3604   	; 0xed2 <__vector_47>
      be:	00 00       	nop
      c0:	35 c7       	rjmp	.+3690   	; 0xf2c <__vector_48>
      c2:	00 00       	nop
      c4:	60 c7       	rjmp	.+3776   	; 0xf86 <__vector_49>
      c6:	00 00       	nop
      c8:	8b c7       	rjmp	.+3862   	; 0xfe0 <__vector_50>
      ca:	00 00       	nop
      cc:	b6 c7       	rjmp	.+3948   	; 0x103a <__vector_51>
      ce:	00 00       	nop
      d0:	e1 c7       	rjmp	.+4034   	; 0x1094 <__vector_52>
      d2:	00 00       	nop
      d4:	0c 94 77 08 	jmp	0x10ee	; 0x10ee <__vector_53>
      d8:	0c 94 a4 08 	jmp	0x1148	; 0x1148 <__vector_54>
      dc:	0c 94 d1 08 	jmp	0x11a2	; 0x11a2 <__vector_55>
      e0:	0c 94 fe 08 	jmp	0x11fc	; 0x11fc <__vector_56>
      e4:	ac c0       	rjmp	.+344    	; 0x23e <__bad_interrupt>
      e6:	00 00       	nop
      e8:	aa c0       	rjmp	.+340    	; 0x23e <__bad_interrupt>
      ea:	00 00       	nop
      ec:	a8 c0       	rjmp	.+336    	; 0x23e <__bad_interrupt>
      ee:	00 00       	nop
      f0:	a6 c0       	rjmp	.+332    	; 0x23e <__bad_interrupt>
      f2:	00 00       	nop
      f4:	a4 c0       	rjmp	.+328    	; 0x23e <__bad_interrupt>
      f6:	00 00       	nop
      f8:	a2 c0       	rjmp	.+324    	; 0x23e <__bad_interrupt>
      fa:	00 00       	nop
      fc:	a0 c0       	rjmp	.+320    	; 0x23e <__bad_interrupt>
      fe:	00 00       	nop
     100:	9e c0       	rjmp	.+316    	; 0x23e <__bad_interrupt>
     102:	00 00       	nop
     104:	9c c0       	rjmp	.+312    	; 0x23e <__bad_interrupt>
     106:	00 00       	nop
     108:	9a c0       	rjmp	.+308    	; 0x23e <__bad_interrupt>
     10a:	00 00       	nop
     10c:	98 c0       	rjmp	.+304    	; 0x23e <__bad_interrupt>
     10e:	00 00       	nop
     110:	96 c0       	rjmp	.+300    	; 0x23e <__bad_interrupt>
     112:	00 00       	nop
     114:	94 c0       	rjmp	.+296    	; 0x23e <__bad_interrupt>
     116:	00 00       	nop
     118:	92 c0       	rjmp	.+292    	; 0x23e <__bad_interrupt>
     11a:	00 00       	nop
     11c:	c6 c1       	rjmp	.+908    	; 0x4aa <__vector_71>
     11e:	00 00       	nop
     120:	f6 c1       	rjmp	.+1004   	; 0x50e <__vector_72>
     122:	00 00       	nop
     124:	26 c2       	rjmp	.+1100   	; 0x572 <__vector_73>
     126:	00 00       	nop
     128:	56 c2       	rjmp	.+1196   	; 0x5d6 <__vector_74>
     12a:	00 00       	nop
     12c:	88 c0       	rjmp	.+272    	; 0x23e <__bad_interrupt>
     12e:	00 00       	nop
     130:	86 c0       	rjmp	.+268    	; 0x23e <__bad_interrupt>
     132:	00 00       	nop
     134:	0c c5       	rjmp	.+2584   	; 0xb4e <__vector_77>
     136:	00 00       	nop
     138:	37 c5       	rjmp	.+2670   	; 0xba8 <__vector_78>
     13a:	00 00       	nop
     13c:	62 c5       	rjmp	.+2756   	; 0xc02 <__vector_79>
     13e:	00 00       	nop
     140:	8d c5       	rjmp	.+2842   	; 0xc5c <__vector_80>
     142:	00 00       	nop
     144:	b8 c5       	rjmp	.+2928   	; 0xcb6 <__vector_81>
     146:	00 00       	nop
     148:	e3 c5       	rjmp	.+3014   	; 0xd10 <__vector_82>
     14a:	00 00       	nop
     14c:	0e c6       	rjmp	.+3100   	; 0xd6a <__vector_83>
     14e:	00 00       	nop
     150:	39 c6       	rjmp	.+3186   	; 0xdc4 <__vector_84>
     152:	00 00       	nop
     154:	64 c6       	rjmp	.+3272   	; 0xe1e <__vector_85>
     156:	00 00       	nop
     158:	8f c6       	rjmp	.+3358   	; 0xe78 <__vector_86>
     15a:	00 00       	nop
     15c:	70 c0       	rjmp	.+224    	; 0x23e <__bad_interrupt>
     15e:	00 00       	nop
     160:	6e c0       	rjmp	.+220    	; 0x23e <__bad_interrupt>
     162:	00 00       	nop
     164:	6c c0       	rjmp	.+216    	; 0x23e <__bad_interrupt>
     166:	00 00       	nop
     168:	6a c0       	rjmp	.+212    	; 0x23e <__bad_interrupt>
     16a:	00 00       	nop
     16c:	68 c0       	rjmp	.+208    	; 0x23e <__bad_interrupt>
     16e:	00 00       	nop
     170:	66 c0       	rjmp	.+204    	; 0x23e <__bad_interrupt>
     172:	00 00       	nop
     174:	64 c0       	rjmp	.+200    	; 0x23e <__bad_interrupt>
     176:	00 00       	nop
     178:	62 c0       	rjmp	.+196    	; 0x23e <__bad_interrupt>
     17a:	00 00       	nop
     17c:	60 c0       	rjmp	.+192    	; 0x23e <__bad_interrupt>
     17e:	00 00       	nop
     180:	5e c0       	rjmp	.+188    	; 0x23e <__bad_interrupt>
     182:	00 00       	nop
     184:	5c c0       	rjmp	.+184    	; 0x23e <__bad_interrupt>
     186:	00 00       	nop
     188:	5a c0       	rjmp	.+180    	; 0x23e <__bad_interrupt>
     18a:	00 00       	nop
     18c:	58 c0       	rjmp	.+176    	; 0x23e <__bad_interrupt>
     18e:	00 00       	nop
     190:	56 c0       	rjmp	.+172    	; 0x23e <__bad_interrupt>
     192:	00 00       	nop
     194:	54 c0       	rjmp	.+168    	; 0x23e <__bad_interrupt>
     196:	00 00       	nop
     198:	52 c0       	rjmp	.+164    	; 0x23e <__bad_interrupt>
     19a:	00 00       	nop
     19c:	50 c0       	rjmp	.+160    	; 0x23e <__bad_interrupt>
     19e:	00 00       	nop
     1a0:	4e c0       	rjmp	.+156    	; 0x23e <__bad_interrupt>
     1a2:	00 00       	nop
     1a4:	4c c0       	rjmp	.+152    	; 0x23e <__bad_interrupt>
     1a6:	00 00       	nop
     1a8:	4a c0       	rjmp	.+148    	; 0x23e <__bad_interrupt>
     1aa:	00 00       	nop
     1ac:	48 c0       	rjmp	.+144    	; 0x23e <__bad_interrupt>
     1ae:	00 00       	nop
     1b0:	0c 94 2b 09 	jmp	0x1256	; 0x1256 <__vector_108>
     1b4:	0c 94 58 09 	jmp	0x12b0	; 0x12b0 <__vector_109>
     1b8:	0c 94 85 09 	jmp	0x130a	; 0x130a <__vector_110>
     1bc:	0c 94 b2 09 	jmp	0x1364	; 0x1364 <__vector_111>
     1c0:	0c 94 df 09 	jmp	0x13be	; 0x13be <__vector_112>
     1c4:	0c 94 0c 0a 	jmp	0x1418	; 0x1418 <__vector_113>
     1c8:	3a c0       	rjmp	.+116    	; 0x23e <__bad_interrupt>
     1ca:	00 00       	nop
     1cc:	38 c0       	rjmp	.+112    	; 0x23e <__bad_interrupt>
     1ce:	00 00       	nop
     1d0:	36 c0       	rjmp	.+108    	; 0x23e <__bad_interrupt>
     1d2:	00 00       	nop
     1d4:	34 c0       	rjmp	.+104    	; 0x23e <__bad_interrupt>
     1d6:	00 00       	nop
     1d8:	32 c0       	rjmp	.+100    	; 0x23e <__bad_interrupt>
     1da:	00 00       	nop
     1dc:	30 c0       	rjmp	.+96     	; 0x23e <__bad_interrupt>
     1de:	00 00       	nop
     1e0:	2e c0       	rjmp	.+92     	; 0x23e <__bad_interrupt>
     1e2:	00 00       	nop
     1e4:	2c c0       	rjmp	.+88     	; 0x23e <__bad_interrupt>
     1e6:	00 00       	nop
     1e8:	2a c0       	rjmp	.+84     	; 0x23e <__bad_interrupt>
     1ea:	00 00       	nop
     1ec:	28 c0       	rjmp	.+80     	; 0x23e <__bad_interrupt>
     1ee:	00 00       	nop
     1f0:	26 c0       	rjmp	.+76     	; 0x23e <__bad_interrupt>
     1f2:	00 00       	nop
     1f4:	24 c0       	rjmp	.+72     	; 0x23e <__bad_interrupt>
     1f6:	00 00       	nop
     1f8:	22 c0       	rjmp	.+68     	; 0x23e <__bad_interrupt>
	...

000001fc <__ctors_end>:
     1fc:	11 24       	eor	r1, r1
     1fe:	1f be       	out	0x3f, r1	; 63
     200:	cf ef       	ldi	r28, 0xFF	; 255
     202:	cd bf       	out	0x3d, r28	; 61
     204:	df e5       	ldi	r29, 0x5F	; 95
     206:	de bf       	out	0x3e, r29	; 62
     208:	00 e0       	ldi	r16, 0x00	; 0
     20a:	0c bf       	out	0x3c, r16	; 60

0000020c <__do_copy_data>:
     20c:	10 e2       	ldi	r17, 0x20	; 32
     20e:	a0 e0       	ldi	r26, 0x00	; 0
     210:	b0 e2       	ldi	r27, 0x20	; 32
     212:	ee e4       	ldi	r30, 0x4E	; 78
     214:	f7 e1       	ldi	r31, 0x17	; 23
     216:	00 e0       	ldi	r16, 0x00	; 0
     218:	0b bf       	out	0x3b, r16	; 59
     21a:	02 c0       	rjmp	.+4      	; 0x220 <__do_copy_data+0x14>
     21c:	07 90       	elpm	r0, Z+
     21e:	0d 92       	st	X+, r0
     220:	a0 30       	cpi	r26, 0x00	; 0
     222:	b1 07       	cpc	r27, r17
     224:	d9 f7       	brne	.-10     	; 0x21c <__do_copy_data+0x10>

00000226 <__do_clear_bss>:
     226:	20 e2       	ldi	r18, 0x20	; 32
     228:	a0 e0       	ldi	r26, 0x00	; 0
     22a:	b0 e2       	ldi	r27, 0x20	; 32
     22c:	01 c0       	rjmp	.+2      	; 0x230 <.do_clear_bss_start>

0000022e <.do_clear_bss_loop>:
     22e:	1d 92       	st	X+, r1

00000230 <.do_clear_bss_start>:
     230:	aa 35       	cpi	r26, 0x5A	; 90
     232:	b2 07       	cpc	r27, r18
     234:	e1 f7       	brne	.-8      	; 0x22e <.do_clear_bss_loop>
     236:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <main>
     23a:	0c 94 a5 0b 	jmp	0x174a	; 0x174a <_exit>

0000023e <__bad_interrupt>:
     23e:	e0 ce       	rjmp	.-576    	; 0x0 <__vectors>

00000240 <sysclk_init>:
#endif
	bool need_rc2mhz = false;

	/* Turn off all peripheral clocks that can be turned off. */
	for (i = 0; i <= SYSCLK_PORT_F; i++) {
		*(reg++) = 0xff;
     240:	8f ef       	ldi	r24, 0xFF	; 255
     242:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x700070>
     246:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <__TEXT_REGION_LENGTH__+0x700071>
     24a:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <__TEXT_REGION_LENGTH__+0x700072>
     24e:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x700073>
     252:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x700074>
     256:	80 93 75 00 	sts	0x0075, r24	; 0x800075 <__TEXT_REGION_LENGTH__+0x700075>
     25a:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <__TEXT_REGION_LENGTH__+0x700076>
     25e:	08 95       	ret

00000260 <sysclk_enable_module>:
	sysclk_rtcsrc_enable(CONFIG_RTC_SOURCE);
#endif
}

void sysclk_enable_module(enum sysclk_port_id port, uint8_t id)
{
     260:	cf 93       	push	r28
     262:	df 93       	push	r29
     264:	1f 92       	push	r1
     266:	cd b7       	in	r28, 0x3d	; 61
     268:	de b7       	in	r29, 0x3e	; 62

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = SREG;
     26a:	9f b7       	in	r25, 0x3f	; 63
     26c:	99 83       	std	Y+1, r25	; 0x01
	cpu_irq_disable();
     26e:	f8 94       	cli
	return flags;
     270:	99 81       	ldd	r25, Y+1	; 0x01
	irqflags_t flags = cpu_irq_save();

	*((uint8_t *)&PR.PRGEN + port) &= ~id;
     272:	e8 2f       	mov	r30, r24
     274:	f0 e0       	ldi	r31, 0x00	; 0
     276:	e0 59       	subi	r30, 0x90	; 144
     278:	ff 4f       	sbci	r31, 0xFF	; 255
     27a:	60 95       	com	r22
     27c:	80 81       	ld	r24, Z
     27e:	68 23       	and	r22, r24
     280:	60 83       	st	Z, r22
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     282:	9f bf       	out	0x3f, r25	; 63

	cpu_irq_restore(flags);
}
     284:	0f 90       	pop	r0
     286:	df 91       	pop	r29
     288:	cf 91       	pop	r28
     28a:	08 95       	ret

0000028c <ioport_configure_port_pin>:
#include "ioport_compat.h"

#if defined(IOPORT_XMEGA_COMPAT)
void ioport_configure_port_pin(void *port, pin_mask_t pin_mask,
		port_pin_flags_t flags)
{
     28c:	cf 93       	push	r28
     28e:	df 93       	push	r29
     290:	fc 01       	movw	r30, r24
	uint8_t pin;

	for (pin = 0; pin < 8; pin++) {
		if (pin_mask & (1 << pin)) {
			*((uint8_t *)port + PORT_PIN0CTRL + pin) = flags >> 8;
     292:	20 e0       	ldi	r18, 0x00	; 0
     294:	30 e0       	ldi	r19, 0x00	; 0
		port_pin_flags_t flags)
{
	uint8_t pin;

	for (pin = 0; pin < 8; pin++) {
		if (pin_mask & (1 << pin)) {
     296:	c6 2f       	mov	r28, r22
     298:	d0 e0       	ldi	r29, 0x00	; 0
     29a:	de 01       	movw	r26, r28
     29c:	02 2e       	mov	r0, r18
     29e:	02 c0       	rjmp	.+4      	; 0x2a4 <ioport_configure_port_pin+0x18>
     2a0:	b5 95       	asr	r27
     2a2:	a7 95       	ror	r26
     2a4:	0a 94       	dec	r0
     2a6:	e2 f7       	brpl	.-8      	; 0x2a0 <ioport_configure_port_pin+0x14>
     2a8:	a0 fd       	sbrc	r26, 0
			*((uint8_t *)port + PORT_PIN0CTRL + pin) = flags >> 8;
     2aa:	50 8b       	std	Z+16, r21	; 0x10
     2ac:	2f 5f       	subi	r18, 0xFF	; 255
     2ae:	3f 4f       	sbci	r19, 0xFF	; 255
     2b0:	31 96       	adiw	r30, 0x01	; 1
void ioport_configure_port_pin(void *port, pin_mask_t pin_mask,
		port_pin_flags_t flags)
{
	uint8_t pin;

	for (pin = 0; pin < 8; pin++) {
     2b2:	28 30       	cpi	r18, 0x08	; 8
     2b4:	31 05       	cpc	r19, r1
     2b6:	89 f7       	brne	.-30     	; 0x29a <ioport_configure_port_pin+0xe>
		if (pin_mask & (1 << pin)) {
			*((uint8_t *)port + PORT_PIN0CTRL + pin) = flags >> 8;
		}
	}
	/* Select direction and initial pin state */
	if (flags & IOPORT_DIR_OUTPUT) {
     2b8:	40 ff       	sbrs	r20, 0
     2ba:	0a c0       	rjmp	.+20     	; 0x2d0 <ioport_configure_port_pin+0x44>
		if (flags & IOPORT_INIT_HIGH) {
     2bc:	41 ff       	sbrs	r20, 1
     2be:	03 c0       	rjmp	.+6      	; 0x2c6 <ioport_configure_port_pin+0x3a>
			*((uint8_t *)port + PORT_OUTSET) = pin_mask;
     2c0:	fc 01       	movw	r30, r24
     2c2:	65 83       	std	Z+5, r22	; 0x05
     2c4:	02 c0       	rjmp	.+4      	; 0x2ca <ioport_configure_port_pin+0x3e>
		} else {
			*((uint8_t *)port + PORT_OUTCLR) = pin_mask;
     2c6:	fc 01       	movw	r30, r24
     2c8:	66 83       	std	Z+6, r22	; 0x06
		}

		*((uint8_t *)port + PORT_DIRSET) = pin_mask;
     2ca:	fc 01       	movw	r30, r24
     2cc:	61 83       	std	Z+1, r22	; 0x01
     2ce:	02 c0       	rjmp	.+4      	; 0x2d4 <ioport_configure_port_pin+0x48>
	} else {
		*((uint8_t *)port + PORT_DIRCLR) = pin_mask;
     2d0:	fc 01       	movw	r30, r24
     2d2:	62 83       	std	Z+2, r22	; 0x02
	}
}
     2d4:	df 91       	pop	r29
     2d6:	cf 91       	pop	r28
     2d8:	08 95       	ret

000002da <board_init>:
 * \param flags Bitmask of flags specifying additional configuration
 * parameters.
 */
static inline void ioport_configure_pin(port_pin_t pin, port_pin_flags_t flags)
{
	ioport_configure_port_pin(arch_ioport_pin_to_base(pin),
     2da:	43 e0       	ldi	r20, 0x03	; 3
     2dc:	50 e0       	ldi	r21, 0x00	; 0
     2de:	61 e0       	ldi	r22, 0x01	; 1
     2e0:	80 ee       	ldi	r24, 0xE0	; 224
     2e2:	97 e0       	ldi	r25, 0x07	; 7
     2e4:	d3 df       	rcall	.-90     	; 0x28c <ioport_configure_port_pin>
     2e6:	43 e0       	ldi	r20, 0x03	; 3
     2e8:	50 e0       	ldi	r21, 0x00	; 0
     2ea:	62 e0       	ldi	r22, 0x02	; 2
     2ec:	80 ee       	ldi	r24, 0xE0	; 224
     2ee:	97 e0       	ldi	r25, 0x07	; 7
     2f0:	cd df       	rcall	.-102    	; 0x28c <ioport_configure_port_pin>
     2f2:	43 e0       	ldi	r20, 0x03	; 3
     2f4:	50 e0       	ldi	r21, 0x00	; 0
     2f6:	60 e1       	ldi	r22, 0x10	; 16
     2f8:	80 e6       	ldi	r24, 0x60	; 96
     2fa:	96 e0       	ldi	r25, 0x06	; 6
     2fc:	c7 df       	rcall	.-114    	; 0x28c <ioport_configure_port_pin>
     2fe:	41 e0       	ldi	r20, 0x01	; 1
     300:	50 e4       	ldi	r21, 0x40	; 64
     302:	60 e2       	ldi	r22, 0x20	; 32
     304:	80 e6       	ldi	r24, 0x60	; 96
     306:	96 e0       	ldi	r25, 0x06	; 6
     308:	c1 df       	rcall	.-126    	; 0x28c <ioport_configure_port_pin>
     30a:	40 e0       	ldi	r20, 0x00	; 0
     30c:	5b e1       	ldi	r21, 0x1B	; 27
     30e:	60 e2       	ldi	r22, 0x20	; 32
     310:	80 e8       	ldi	r24, 0x80	; 128
     312:	96 e0       	ldi	r25, 0x06	; 6
     314:	bb df       	rcall	.-138    	; 0x28c <ioport_configure_port_pin>
     316:	40 e0       	ldi	r20, 0x00	; 0
     318:	5b e1       	ldi	r21, 0x1B	; 27
     31a:	62 e0       	ldi	r22, 0x02	; 2
     31c:	80 ea       	ldi	r24, 0xA0	; 160
     31e:	96 e0       	ldi	r25, 0x06	; 6
     320:	b5 df       	rcall	.-150    	; 0x28c <ioport_configure_port_pin>
     322:	40 e0       	ldi	r20, 0x00	; 0
     324:	5b e1       	ldi	r21, 0x1B	; 27
     326:	64 e0       	ldi	r22, 0x04	; 4
     328:	80 ea       	ldi	r24, 0xA0	; 160
     32a:	96 e0       	ldi	r25, 0x06	; 6
     32c:	af df       	rcall	.-162    	; 0x28c <ioport_configure_port_pin>
     32e:	43 e0       	ldi	r20, 0x03	; 3
     330:	50 e0       	ldi	r21, 0x00	; 0
     332:	62 e0       	ldi	r22, 0x02	; 2
     334:	80 e6       	ldi	r24, 0x60	; 96
     336:	96 e0       	ldi	r25, 0x06	; 6
     338:	a9 df       	rcall	.-174    	; 0x28c <ioport_configure_port_pin>
     33a:	43 e0       	ldi	r20, 0x03	; 3
     33c:	50 e0       	ldi	r21, 0x00	; 0
     33e:	68 e0       	ldi	r22, 0x08	; 8
     340:	80 e6       	ldi	r24, 0x60	; 96
     342:	96 e0       	ldi	r25, 0x06	; 6
     344:	a3 df       	rcall	.-186    	; 0x28c <ioport_configure_port_pin>
     346:	43 e0       	ldi	r20, 0x03	; 3
     348:	50 e0       	ldi	r21, 0x00	; 0
     34a:	68 e0       	ldi	r22, 0x08	; 8
     34c:	80 ea       	ldi	r24, 0xA0	; 160
     34e:	96 e0       	ldi	r25, 0x06	; 6
     350:	9d df       	rcall	.-198    	; 0x28c <ioport_configure_port_pin>
     352:	43 e0       	ldi	r20, 0x03	; 3
     354:	50 e0       	ldi	r21, 0x00	; 0
     356:	61 e0       	ldi	r22, 0x01	; 1
     358:	80 e6       	ldi	r24, 0x60	; 96
     35a:	96 e0       	ldi	r25, 0x06	; 6
     35c:	97 df       	rcall	.-210    	; 0x28c <ioport_configure_port_pin>
     35e:	43 e0       	ldi	r20, 0x03	; 3
     360:	50 e0       	ldi	r21, 0x00	; 0
     362:	68 e0       	ldi	r22, 0x08	; 8
     364:	80 e0       	ldi	r24, 0x00	; 0
     366:	96 e0       	ldi	r25, 0x06	; 6
     368:	91 df       	rcall	.-222    	; 0x28c <ioport_configure_port_pin>
     36a:	41 e0       	ldi	r20, 0x01	; 1
     36c:	50 e0       	ldi	r21, 0x00	; 0
     36e:	60 e1       	ldi	r22, 0x10	; 16
     370:	80 e8       	ldi	r24, 0x80	; 128
     372:	96 e0       	ldi	r25, 0x06	; 6
     374:	8b df       	rcall	.-234    	; 0x28c <ioport_configure_port_pin>
     376:	43 e0       	ldi	r20, 0x03	; 3
     378:	50 e0       	ldi	r21, 0x00	; 0
     37a:	62 e0       	ldi	r22, 0x02	; 2
     37c:	80 e6       	ldi	r24, 0x60	; 96
     37e:	96 e0       	ldi	r25, 0x06	; 6
     380:	85 df       	rcall	.-246    	; 0x28c <ioport_configure_port_pin>
     382:	43 e0       	ldi	r20, 0x03	; 3
     384:	50 e0       	ldi	r21, 0x00	; 0
     386:	68 e0       	ldi	r22, 0x08	; 8
     388:	80 e6       	ldi	r24, 0x60	; 96
     38a:	96 e0       	ldi	r25, 0x06	; 6
     38c:	7f df       	rcall	.-258    	; 0x28c <ioport_configure_port_pin>
     38e:	40 e0       	ldi	r20, 0x00	; 0
     390:	50 e0       	ldi	r21, 0x00	; 0
     392:	64 e0       	ldi	r22, 0x04	; 4
     394:	80 e6       	ldi	r24, 0x60	; 96
     396:	96 e0       	ldi	r25, 0x06	; 6
     398:	79 df       	rcall	.-270    	; 0x28c <ioport_configure_port_pin>
     39a:	43 e0       	ldi	r20, 0x03	; 3
     39c:	50 e0       	ldi	r21, 0x00	; 0
     39e:	60 e1       	ldi	r22, 0x10	; 16
     3a0:	80 ea       	ldi	r24, 0xA0	; 160
     3a2:	96 e0       	ldi	r25, 0x06	; 6
     3a4:	73 df       	rcall	.-282    	; 0x28c <ioport_configure_port_pin>
     3a6:	40 e0       	ldi	r20, 0x00	; 0
     3a8:	50 e0       	ldi	r21, 0x00	; 0
     3aa:	61 e0       	ldi	r22, 0x01	; 1
     3ac:	80 e0       	ldi	r24, 0x00	; 0
     3ae:	96 e0       	ldi	r25, 0x06	; 6
     3b0:	6d df       	rcall	.-294    	; 0x28c <ioport_configure_port_pin>
     3b2:	40 e0       	ldi	r20, 0x00	; 0
     3b4:	50 e0       	ldi	r21, 0x00	; 0
     3b6:	64 e0       	ldi	r22, 0x04	; 4
     3b8:	80 e0       	ldi	r24, 0x00	; 0
     3ba:	96 e0       	ldi	r25, 0x06	; 6
     3bc:	67 df       	rcall	.-306    	; 0x28c <ioport_configure_port_pin>
     3be:	40 e0       	ldi	r20, 0x00	; 0
     3c0:	50 e0       	ldi	r21, 0x00	; 0
     3c2:	62 e0       	ldi	r22, 0x02	; 2
     3c4:	80 e2       	ldi	r24, 0x20	; 32
     3c6:	96 e0       	ldi	r25, 0x06	; 6
     3c8:	61 df       	rcall	.-318    	; 0x28c <ioport_configure_port_pin>
     3ca:	43 e0       	ldi	r20, 0x03	; 3
     3cc:	50 e0       	ldi	r21, 0x00	; 0
     3ce:	68 e0       	ldi	r22, 0x08	; 8
     3d0:	80 e4       	ldi	r24, 0x40	; 64
     3d2:	96 e0       	ldi	r25, 0x06	; 6
     3d4:	5b df       	rcall	.-330    	; 0x28c <ioport_configure_port_pin>
     3d6:	40 e0       	ldi	r20, 0x00	; 0
     3d8:	50 e0       	ldi	r21, 0x00	; 0
     3da:	64 e0       	ldi	r22, 0x04	; 4
     3dc:	80 e4       	ldi	r24, 0x40	; 64
     3de:	96 e0       	ldi	r25, 0x06	; 6
     3e0:	55 df       	rcall	.-342    	; 0x28c <ioport_configure_port_pin>
     3e2:	43 e0       	ldi	r20, 0x03	; 3
     3e4:	50 e0       	ldi	r21, 0x00	; 0
     3e6:	68 e0       	ldi	r22, 0x08	; 8
     3e8:	80 e6       	ldi	r24, 0x60	; 96
     3ea:	96 e0       	ldi	r25, 0x06	; 6
     3ec:	4f df       	rcall	.-354    	; 0x28c <ioport_configure_port_pin>
     3ee:	40 e0       	ldi	r20, 0x00	; 0
     3f0:	50 e0       	ldi	r21, 0x00	; 0
     3f2:	64 e0       	ldi	r22, 0x04	; 4
     3f4:	80 e6       	ldi	r24, 0x60	; 96
     3f6:	96 e0       	ldi	r25, 0x06	; 6
     3f8:	49 df       	rcall	.-366    	; 0x28c <ioport_configure_port_pin>
     3fa:	43 e0       	ldi	r20, 0x03	; 3
     3fc:	50 e0       	ldi	r21, 0x00	; 0
     3fe:	68 e0       	ldi	r22, 0x08	; 8
     400:	80 e8       	ldi	r24, 0x80	; 128
     402:	96 e0       	ldi	r25, 0x06	; 6
     404:	43 df       	rcall	.-378    	; 0x28c <ioport_configure_port_pin>
     406:	40 e0       	ldi	r20, 0x00	; 0
     408:	50 e0       	ldi	r21, 0x00	; 0
     40a:	64 e0       	ldi	r22, 0x04	; 4
     40c:	80 e8       	ldi	r24, 0x80	; 128
     40e:	96 e0       	ldi	r25, 0x06	; 6
     410:	3d cf       	rjmp	.-390    	; 0x28c <ioport_configure_port_pin>
     412:	08 95       	ret

00000414 <adc_enable_clock>:

#ifdef ADCB
	if ((uintptr_t)adc == (uintptr_t)(&ADCB)) {
		Assert(adcb_enable_count);
		if (!--adcb_enable_count) {
			sysclk_disable_module(SYSCLK_PORT_B, SYSCLK_ADC);
     414:	81 15       	cp	r24, r1
     416:	22 e0       	ldi	r18, 0x02	; 2
     418:	92 07       	cpc	r25, r18
     41a:	61 f4       	brne	.+24     	; 0x434 <adc_enable_clock+0x20>
     41c:	80 91 01 20 	lds	r24, 0x2001	; 0x802001 <adca_enable_count>
     420:	91 e0       	ldi	r25, 0x01	; 1
     422:	98 0f       	add	r25, r24
     424:	90 93 01 20 	sts	0x2001, r25	; 0x802001 <adca_enable_count>
     428:	81 11       	cpse	r24, r1
     42a:	12 c0       	rjmp	.+36     	; 0x450 <adc_enable_clock+0x3c>
     42c:	62 e0       	ldi	r22, 0x02	; 2
     42e:	81 e0       	ldi	r24, 0x01	; 1
     430:	17 cf       	rjmp	.-466    	; 0x260 <sysclk_enable_module>
     432:	08 95       	ret
     434:	80 34       	cpi	r24, 0x40	; 64
     436:	92 40       	sbci	r25, 0x02	; 2
     438:	59 f4       	brne	.+22     	; 0x450 <adc_enable_clock+0x3c>
     43a:	80 91 00 20 	lds	r24, 0x2000	; 0x802000 <__data_end>
     43e:	91 e0       	ldi	r25, 0x01	; 1
     440:	98 0f       	add	r25, r24
     442:	90 93 00 20 	sts	0x2000, r25	; 0x802000 <__data_end>
     446:	81 11       	cpse	r24, r1
     448:	03 c0       	rjmp	.+6      	; 0x450 <adc_enable_clock+0x3c>
     44a:	62 e0       	ldi	r22, 0x02	; 2
     44c:	82 e0       	ldi	r24, 0x02	; 2
     44e:	08 cf       	rjmp	.-496    	; 0x260 <sysclk_enable_module>
     450:	08 95       	ret

00000452 <adc_enable>:
 * a conversion. For most XMEGA devices the start-up time is specified
 * to be a maximum of 24 ADC clock cycles. Please verify the start-up time for
 * the device in use.
 */
void adc_enable(ADC_t *adc)
{
     452:	ef 92       	push	r14
     454:	ff 92       	push	r15
     456:	1f 93       	push	r17
     458:	cf 93       	push	r28
     45a:	df 93       	push	r29
     45c:	1f 92       	push	r1
     45e:	1f 92       	push	r1
     460:	cd b7       	in	r28, 0x3d	; 61
     462:	de b7       	in	r29, 0x3e	; 62
     464:	7c 01       	movw	r14, r24

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = SREG;
     466:	8f b7       	in	r24, 0x3f	; 63
     468:	89 83       	std	Y+1, r24	; 0x01
	cpu_irq_disable();
     46a:	f8 94       	cli
	return flags;
     46c:	19 81       	ldd	r17, Y+1	; 0x01
	irqflags_t flags = cpu_irq_save();
	adc_enable_clock(adc);
     46e:	c7 01       	movw	r24, r14
     470:	d1 df       	rcall	.-94     	; 0x414 <adc_enable_clock>
	adc->CTRLA |= ADC_ENABLE_bm;
     472:	f7 01       	movw	r30, r14
     474:	80 81       	ld	r24, Z
     476:	81 60       	ori	r24, 0x01	; 1
     478:	80 83       	st	Z, r24
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     47a:	1f bf       	out	0x3f, r17	; 63
static inline void sleepmgr_lock_mode(enum sleepmgr_mode mode)
{
#ifdef CONFIG_SLEEPMGR_ENABLE
	irqflags_t flags;

	if(sleepmgr_locks[mode] >= 0xff) {
     47c:	80 91 51 20 	lds	r24, 0x2051	; 0x802051 <sleepmgr_locks+0x1>
     480:	8f 3f       	cpi	r24, 0xFF	; 255
     482:	09 f4       	brne	.+2      	; 0x486 <adc_enable+0x34>
     484:	ff cf       	rjmp	.-2      	; 0x484 <adc_enable+0x32>

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = SREG;
     486:	8f b7       	in	r24, 0x3f	; 63
     488:	8a 83       	std	Y+2, r24	; 0x02
	cpu_irq_disable();
     48a:	f8 94       	cli
	return flags;
     48c:	9a 81       	ldd	r25, Y+2	; 0x02
	}

	// Enter a critical section
	flags = cpu_irq_save();

	++sleepmgr_locks[mode];
     48e:	e0 e5       	ldi	r30, 0x50	; 80
     490:	f0 e2       	ldi	r31, 0x20	; 32
     492:	81 81       	ldd	r24, Z+1	; 0x01
     494:	8f 5f       	subi	r24, 0xFF	; 255
     496:	81 83       	std	Z+1, r24	; 0x01
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     498:	9f bf       	out	0x3f, r25	; 63
	cpu_irq_restore(flags);

	sleepmgr_lock_mode(SLEEPMGR_IDLE);
}
     49a:	0f 90       	pop	r0
     49c:	0f 90       	pop	r0
     49e:	df 91       	pop	r29
     4a0:	cf 91       	pop	r28
     4a2:	1f 91       	pop	r17
     4a4:	ff 90       	pop	r15
     4a6:	ef 90       	pop	r14
     4a8:	08 95       	ret

000004aa <__vector_71>:
 *
 * Calls the callback function that has been set for the ADC when the channel's
 * interrupt flag is set, if its interrupt has been enabled.
 */
ISR(ADCA_CH0_vect)
{
     4aa:	1f 92       	push	r1
     4ac:	0f 92       	push	r0
     4ae:	0f b6       	in	r0, 0x3f	; 63
     4b0:	0f 92       	push	r0
     4b2:	11 24       	eor	r1, r1
     4b4:	0b b6       	in	r0, 0x3b	; 59
     4b6:	0f 92       	push	r0
     4b8:	2f 93       	push	r18
     4ba:	3f 93       	push	r19
     4bc:	4f 93       	push	r20
     4be:	5f 93       	push	r21
     4c0:	6f 93       	push	r22
     4c2:	7f 93       	push	r23
     4c4:	8f 93       	push	r24
     4c6:	9f 93       	push	r25
     4c8:	af 93       	push	r26
     4ca:	bf 93       	push	r27
     4cc:	ef 93       	push	r30
     4ce:	ff 93       	push	r31
	adca_callback(&ADCA, ADC_CH0, adc_get_result(&ADCA, ADC_CH0));
     4d0:	40 91 24 02 	lds	r20, 0x0224	; 0x800224 <__TEXT_REGION_LENGTH__+0x700224>
     4d4:	50 91 25 02 	lds	r21, 0x0225	; 0x800225 <__TEXT_REGION_LENGTH__+0x700225>
     4d8:	e0 91 58 20 	lds	r30, 0x2058	; 0x802058 <adca_callback>
     4dc:	f0 91 59 20 	lds	r31, 0x2059	; 0x802059 <adca_callback+0x1>
     4e0:	61 e0       	ldi	r22, 0x01	; 1
     4e2:	80 e0       	ldi	r24, 0x00	; 0
     4e4:	92 e0       	ldi	r25, 0x02	; 2
     4e6:	19 95       	eicall
}
     4e8:	ff 91       	pop	r31
     4ea:	ef 91       	pop	r30
     4ec:	bf 91       	pop	r27
     4ee:	af 91       	pop	r26
     4f0:	9f 91       	pop	r25
     4f2:	8f 91       	pop	r24
     4f4:	7f 91       	pop	r23
     4f6:	6f 91       	pop	r22
     4f8:	5f 91       	pop	r21
     4fa:	4f 91       	pop	r20
     4fc:	3f 91       	pop	r19
     4fe:	2f 91       	pop	r18
     500:	0f 90       	pop	r0
     502:	0b be       	out	0x3b, r0	; 59
     504:	0f 90       	pop	r0
     506:	0f be       	out	0x3f, r0	; 63
     508:	0f 90       	pop	r0
     50a:	1f 90       	pop	r1
     50c:	18 95       	reti

0000050e <__vector_72>:
 *
 * Calls the callback function that has been set for the ADC when the channel's
 * interrupt flag is set, if its interrupt has been enabled.
 */
ISR(ADCA_CH1_vect)
{
     50e:	1f 92       	push	r1
     510:	0f 92       	push	r0
     512:	0f b6       	in	r0, 0x3f	; 63
     514:	0f 92       	push	r0
     516:	11 24       	eor	r1, r1
     518:	0b b6       	in	r0, 0x3b	; 59
     51a:	0f 92       	push	r0
     51c:	2f 93       	push	r18
     51e:	3f 93       	push	r19
     520:	4f 93       	push	r20
     522:	5f 93       	push	r21
     524:	6f 93       	push	r22
     526:	7f 93       	push	r23
     528:	8f 93       	push	r24
     52a:	9f 93       	push	r25
     52c:	af 93       	push	r26
     52e:	bf 93       	push	r27
     530:	ef 93       	push	r30
     532:	ff 93       	push	r31
	adca_callback(&ADCA, ADC_CH1, adc_get_result(&ADCA, ADC_CH1));
     534:	40 91 2c 02 	lds	r20, 0x022C	; 0x80022c <__TEXT_REGION_LENGTH__+0x70022c>
     538:	50 91 2d 02 	lds	r21, 0x022D	; 0x80022d <__TEXT_REGION_LENGTH__+0x70022d>
     53c:	e0 91 58 20 	lds	r30, 0x2058	; 0x802058 <adca_callback>
     540:	f0 91 59 20 	lds	r31, 0x2059	; 0x802059 <adca_callback+0x1>
     544:	62 e0       	ldi	r22, 0x02	; 2
     546:	80 e0       	ldi	r24, 0x00	; 0
     548:	92 e0       	ldi	r25, 0x02	; 2
     54a:	19 95       	eicall
}
     54c:	ff 91       	pop	r31
     54e:	ef 91       	pop	r30
     550:	bf 91       	pop	r27
     552:	af 91       	pop	r26
     554:	9f 91       	pop	r25
     556:	8f 91       	pop	r24
     558:	7f 91       	pop	r23
     55a:	6f 91       	pop	r22
     55c:	5f 91       	pop	r21
     55e:	4f 91       	pop	r20
     560:	3f 91       	pop	r19
     562:	2f 91       	pop	r18
     564:	0f 90       	pop	r0
     566:	0b be       	out	0x3b, r0	; 59
     568:	0f 90       	pop	r0
     56a:	0f be       	out	0x3f, r0	; 63
     56c:	0f 90       	pop	r0
     56e:	1f 90       	pop	r1
     570:	18 95       	reti

00000572 <__vector_73>:
 *
 * Calls the callback function that has been set for the ADC when the channel's
 * interrupt flag is set, if its interrupt has been enabled.
 */
ISR(ADCA_CH2_vect)
{
     572:	1f 92       	push	r1
     574:	0f 92       	push	r0
     576:	0f b6       	in	r0, 0x3f	; 63
     578:	0f 92       	push	r0
     57a:	11 24       	eor	r1, r1
     57c:	0b b6       	in	r0, 0x3b	; 59
     57e:	0f 92       	push	r0
     580:	2f 93       	push	r18
     582:	3f 93       	push	r19
     584:	4f 93       	push	r20
     586:	5f 93       	push	r21
     588:	6f 93       	push	r22
     58a:	7f 93       	push	r23
     58c:	8f 93       	push	r24
     58e:	9f 93       	push	r25
     590:	af 93       	push	r26
     592:	bf 93       	push	r27
     594:	ef 93       	push	r30
     596:	ff 93       	push	r31
	adca_callback(&ADCA, ADC_CH2, adc_get_result(&ADCA, ADC_CH2));
     598:	40 91 34 02 	lds	r20, 0x0234	; 0x800234 <__TEXT_REGION_LENGTH__+0x700234>
     59c:	50 91 35 02 	lds	r21, 0x0235	; 0x800235 <__TEXT_REGION_LENGTH__+0x700235>
     5a0:	e0 91 58 20 	lds	r30, 0x2058	; 0x802058 <adca_callback>
     5a4:	f0 91 59 20 	lds	r31, 0x2059	; 0x802059 <adca_callback+0x1>
     5a8:	64 e0       	ldi	r22, 0x04	; 4
     5aa:	80 e0       	ldi	r24, 0x00	; 0
     5ac:	92 e0       	ldi	r25, 0x02	; 2
     5ae:	19 95       	eicall
}
     5b0:	ff 91       	pop	r31
     5b2:	ef 91       	pop	r30
     5b4:	bf 91       	pop	r27
     5b6:	af 91       	pop	r26
     5b8:	9f 91       	pop	r25
     5ba:	8f 91       	pop	r24
     5bc:	7f 91       	pop	r23
     5be:	6f 91       	pop	r22
     5c0:	5f 91       	pop	r21
     5c2:	4f 91       	pop	r20
     5c4:	3f 91       	pop	r19
     5c6:	2f 91       	pop	r18
     5c8:	0f 90       	pop	r0
     5ca:	0b be       	out	0x3b, r0	; 59
     5cc:	0f 90       	pop	r0
     5ce:	0f be       	out	0x3f, r0	; 63
     5d0:	0f 90       	pop	r0
     5d2:	1f 90       	pop	r1
     5d4:	18 95       	reti

000005d6 <__vector_74>:
 *
 * Calls the callback function that has been set for the ADC when the channel's
 * interrupt flag is set, if its interrupt has been enabled.
 */
ISR(ADCA_CH3_vect)
{
     5d6:	1f 92       	push	r1
     5d8:	0f 92       	push	r0
     5da:	0f b6       	in	r0, 0x3f	; 63
     5dc:	0f 92       	push	r0
     5de:	11 24       	eor	r1, r1
     5e0:	0b b6       	in	r0, 0x3b	; 59
     5e2:	0f 92       	push	r0
     5e4:	2f 93       	push	r18
     5e6:	3f 93       	push	r19
     5e8:	4f 93       	push	r20
     5ea:	5f 93       	push	r21
     5ec:	6f 93       	push	r22
     5ee:	7f 93       	push	r23
     5f0:	8f 93       	push	r24
     5f2:	9f 93       	push	r25
     5f4:	af 93       	push	r26
     5f6:	bf 93       	push	r27
     5f8:	ef 93       	push	r30
     5fa:	ff 93       	push	r31
	adca_callback(&ADCA, ADC_CH3, adc_get_result(&ADCA, ADC_CH3));
     5fc:	40 91 3c 02 	lds	r20, 0x023C	; 0x80023c <__TEXT_REGION_LENGTH__+0x70023c>
     600:	50 91 3d 02 	lds	r21, 0x023D	; 0x80023d <__TEXT_REGION_LENGTH__+0x70023d>
     604:	e0 91 58 20 	lds	r30, 0x2058	; 0x802058 <adca_callback>
     608:	f0 91 59 20 	lds	r31, 0x2059	; 0x802059 <adca_callback+0x1>
     60c:	68 e0       	ldi	r22, 0x08	; 8
     60e:	80 e0       	ldi	r24, 0x00	; 0
     610:	92 e0       	ldi	r25, 0x02	; 2
     612:	19 95       	eicall
}
     614:	ff 91       	pop	r31
     616:	ef 91       	pop	r30
     618:	bf 91       	pop	r27
     61a:	af 91       	pop	r26
     61c:	9f 91       	pop	r25
     61e:	8f 91       	pop	r24
     620:	7f 91       	pop	r23
     622:	6f 91       	pop	r22
     624:	5f 91       	pop	r21
     626:	4f 91       	pop	r20
     628:	3f 91       	pop	r19
     62a:	2f 91       	pop	r18
     62c:	0f 90       	pop	r0
     62e:	0b be       	out	0x3b, r0	; 59
     630:	0f 90       	pop	r0
     632:	0f be       	out	0x3f, r0	; 63
     634:	0f 90       	pop	r0
     636:	1f 90       	pop	r1
     638:	18 95       	reti

0000063a <__vector_39>:
 *
 * Calls the callback function that has been set for the ADC when the channel's
 * interrupt flag is set, if its interrupt has been enabled.
 */
ISR(ADCB_CH0_vect)
{
     63a:	1f 92       	push	r1
     63c:	0f 92       	push	r0
     63e:	0f b6       	in	r0, 0x3f	; 63
     640:	0f 92       	push	r0
     642:	11 24       	eor	r1, r1
     644:	0b b6       	in	r0, 0x3b	; 59
     646:	0f 92       	push	r0
     648:	2f 93       	push	r18
     64a:	3f 93       	push	r19
     64c:	4f 93       	push	r20
     64e:	5f 93       	push	r21
     650:	6f 93       	push	r22
     652:	7f 93       	push	r23
     654:	8f 93       	push	r24
     656:	9f 93       	push	r25
     658:	af 93       	push	r26
     65a:	bf 93       	push	r27
     65c:	ef 93       	push	r30
     65e:	ff 93       	push	r31
	adcb_callback(&ADCB, ADC_CH0, adc_get_result(&ADCB, ADC_CH0));
     660:	40 91 64 02 	lds	r20, 0x0264	; 0x800264 <__TEXT_REGION_LENGTH__+0x700264>
     664:	50 91 65 02 	lds	r21, 0x0265	; 0x800265 <__TEXT_REGION_LENGTH__+0x700265>
     668:	e0 91 56 20 	lds	r30, 0x2056	; 0x802056 <adcb_callback>
     66c:	f0 91 57 20 	lds	r31, 0x2057	; 0x802057 <adcb_callback+0x1>
     670:	61 e0       	ldi	r22, 0x01	; 1
     672:	80 e4       	ldi	r24, 0x40	; 64
     674:	92 e0       	ldi	r25, 0x02	; 2
     676:	19 95       	eicall
}
     678:	ff 91       	pop	r31
     67a:	ef 91       	pop	r30
     67c:	bf 91       	pop	r27
     67e:	af 91       	pop	r26
     680:	9f 91       	pop	r25
     682:	8f 91       	pop	r24
     684:	7f 91       	pop	r23
     686:	6f 91       	pop	r22
     688:	5f 91       	pop	r21
     68a:	4f 91       	pop	r20
     68c:	3f 91       	pop	r19
     68e:	2f 91       	pop	r18
     690:	0f 90       	pop	r0
     692:	0b be       	out	0x3b, r0	; 59
     694:	0f 90       	pop	r0
     696:	0f be       	out	0x3f, r0	; 63
     698:	0f 90       	pop	r0
     69a:	1f 90       	pop	r1
     69c:	18 95       	reti

0000069e <__vector_40>:
 *
 * Calls the callback function that has been set for the ADC when the channel's
 * interrupt flag is set, if its interrupt has been enabled.
 */
ISR(ADCB_CH1_vect)
{
     69e:	1f 92       	push	r1
     6a0:	0f 92       	push	r0
     6a2:	0f b6       	in	r0, 0x3f	; 63
     6a4:	0f 92       	push	r0
     6a6:	11 24       	eor	r1, r1
     6a8:	0b b6       	in	r0, 0x3b	; 59
     6aa:	0f 92       	push	r0
     6ac:	2f 93       	push	r18
     6ae:	3f 93       	push	r19
     6b0:	4f 93       	push	r20
     6b2:	5f 93       	push	r21
     6b4:	6f 93       	push	r22
     6b6:	7f 93       	push	r23
     6b8:	8f 93       	push	r24
     6ba:	9f 93       	push	r25
     6bc:	af 93       	push	r26
     6be:	bf 93       	push	r27
     6c0:	ef 93       	push	r30
     6c2:	ff 93       	push	r31
	adcb_callback(&ADCB, ADC_CH1, adc_get_result(&ADCB, ADC_CH1));
     6c4:	40 91 6c 02 	lds	r20, 0x026C	; 0x80026c <__TEXT_REGION_LENGTH__+0x70026c>
     6c8:	50 91 6d 02 	lds	r21, 0x026D	; 0x80026d <__TEXT_REGION_LENGTH__+0x70026d>
     6cc:	e0 91 56 20 	lds	r30, 0x2056	; 0x802056 <adcb_callback>
     6d0:	f0 91 57 20 	lds	r31, 0x2057	; 0x802057 <adcb_callback+0x1>
     6d4:	62 e0       	ldi	r22, 0x02	; 2
     6d6:	80 e4       	ldi	r24, 0x40	; 64
     6d8:	92 e0       	ldi	r25, 0x02	; 2
     6da:	19 95       	eicall
}
     6dc:	ff 91       	pop	r31
     6de:	ef 91       	pop	r30
     6e0:	bf 91       	pop	r27
     6e2:	af 91       	pop	r26
     6e4:	9f 91       	pop	r25
     6e6:	8f 91       	pop	r24
     6e8:	7f 91       	pop	r23
     6ea:	6f 91       	pop	r22
     6ec:	5f 91       	pop	r21
     6ee:	4f 91       	pop	r20
     6f0:	3f 91       	pop	r19
     6f2:	2f 91       	pop	r18
     6f4:	0f 90       	pop	r0
     6f6:	0b be       	out	0x3b, r0	; 59
     6f8:	0f 90       	pop	r0
     6fa:	0f be       	out	0x3f, r0	; 63
     6fc:	0f 90       	pop	r0
     6fe:	1f 90       	pop	r1
     700:	18 95       	reti

00000702 <__vector_41>:
 *
 * Calls the callback function that has been set for the ADC when the channel's
 * interrupt flag is set, if its interrupt has been enabled.
 */
ISR(ADCB_CH2_vect)
{
     702:	1f 92       	push	r1
     704:	0f 92       	push	r0
     706:	0f b6       	in	r0, 0x3f	; 63
     708:	0f 92       	push	r0
     70a:	11 24       	eor	r1, r1
     70c:	0b b6       	in	r0, 0x3b	; 59
     70e:	0f 92       	push	r0
     710:	2f 93       	push	r18
     712:	3f 93       	push	r19
     714:	4f 93       	push	r20
     716:	5f 93       	push	r21
     718:	6f 93       	push	r22
     71a:	7f 93       	push	r23
     71c:	8f 93       	push	r24
     71e:	9f 93       	push	r25
     720:	af 93       	push	r26
     722:	bf 93       	push	r27
     724:	ef 93       	push	r30
     726:	ff 93       	push	r31
	adcb_callback(&ADCB, ADC_CH2, adc_get_result(&ADCB, ADC_CH2));
     728:	40 91 74 02 	lds	r20, 0x0274	; 0x800274 <__TEXT_REGION_LENGTH__+0x700274>
     72c:	50 91 75 02 	lds	r21, 0x0275	; 0x800275 <__TEXT_REGION_LENGTH__+0x700275>
     730:	e0 91 56 20 	lds	r30, 0x2056	; 0x802056 <adcb_callback>
     734:	f0 91 57 20 	lds	r31, 0x2057	; 0x802057 <adcb_callback+0x1>
     738:	64 e0       	ldi	r22, 0x04	; 4
     73a:	80 e4       	ldi	r24, 0x40	; 64
     73c:	92 e0       	ldi	r25, 0x02	; 2
     73e:	19 95       	eicall
}
     740:	ff 91       	pop	r31
     742:	ef 91       	pop	r30
     744:	bf 91       	pop	r27
     746:	af 91       	pop	r26
     748:	9f 91       	pop	r25
     74a:	8f 91       	pop	r24
     74c:	7f 91       	pop	r23
     74e:	6f 91       	pop	r22
     750:	5f 91       	pop	r21
     752:	4f 91       	pop	r20
     754:	3f 91       	pop	r19
     756:	2f 91       	pop	r18
     758:	0f 90       	pop	r0
     75a:	0b be       	out	0x3b, r0	; 59
     75c:	0f 90       	pop	r0
     75e:	0f be       	out	0x3f, r0	; 63
     760:	0f 90       	pop	r0
     762:	1f 90       	pop	r1
     764:	18 95       	reti

00000766 <__vector_42>:
 *
 * Calls the callback function that has been set for the ADC when the channel's
 * interrupt flag is set, if its interrupt has been enabled.
 */
ISR(ADCB_CH3_vect)
{
     766:	1f 92       	push	r1
     768:	0f 92       	push	r0
     76a:	0f b6       	in	r0, 0x3f	; 63
     76c:	0f 92       	push	r0
     76e:	11 24       	eor	r1, r1
     770:	0b b6       	in	r0, 0x3b	; 59
     772:	0f 92       	push	r0
     774:	2f 93       	push	r18
     776:	3f 93       	push	r19
     778:	4f 93       	push	r20
     77a:	5f 93       	push	r21
     77c:	6f 93       	push	r22
     77e:	7f 93       	push	r23
     780:	8f 93       	push	r24
     782:	9f 93       	push	r25
     784:	af 93       	push	r26
     786:	bf 93       	push	r27
     788:	ef 93       	push	r30
     78a:	ff 93       	push	r31
	adcb_callback(&ADCB, ADC_CH3, adc_get_result(&ADCB, ADC_CH3));
     78c:	40 91 7c 02 	lds	r20, 0x027C	; 0x80027c <__TEXT_REGION_LENGTH__+0x70027c>
     790:	50 91 7d 02 	lds	r21, 0x027D	; 0x80027d <__TEXT_REGION_LENGTH__+0x70027d>
     794:	e0 91 56 20 	lds	r30, 0x2056	; 0x802056 <adcb_callback>
     798:	f0 91 57 20 	lds	r31, 0x2057	; 0x802057 <adcb_callback+0x1>
     79c:	68 e0       	ldi	r22, 0x08	; 8
     79e:	80 e4       	ldi	r24, 0x40	; 64
     7a0:	92 e0       	ldi	r25, 0x02	; 2
     7a2:	19 95       	eicall
}
     7a4:	ff 91       	pop	r31
     7a6:	ef 91       	pop	r30
     7a8:	bf 91       	pop	r27
     7aa:	af 91       	pop	r26
     7ac:	9f 91       	pop	r25
     7ae:	8f 91       	pop	r24
     7b0:	7f 91       	pop	r23
     7b2:	6f 91       	pop	r22
     7b4:	5f 91       	pop	r21
     7b6:	4f 91       	pop	r20
     7b8:	3f 91       	pop	r19
     7ba:	2f 91       	pop	r18
     7bc:	0f 90       	pop	r0
     7be:	0b be       	out	0x3b, r0	; 59
     7c0:	0f 90       	pop	r0
     7c2:	0f be       	out	0x3f, r0	; 63
     7c4:	0f 90       	pop	r0
     7c6:	1f 90       	pop	r1
     7c8:	18 95       	reti

000007ca <__vector_14>:
		tc_tce1_err_callback = callback;
	} else
#endif
#ifdef TCF0
	if ((uintptr_t) tc == (uintptr_t) & TCF0) {
		tc_tcf0_err_callback = callback;
     7ca:	1f 92       	push	r1
     7cc:	0f 92       	push	r0
     7ce:	0f b6       	in	r0, 0x3f	; 63
     7d0:	0f 92       	push	r0
     7d2:	11 24       	eor	r1, r1
     7d4:	0b b6       	in	r0, 0x3b	; 59
     7d6:	0f 92       	push	r0
     7d8:	2f 93       	push	r18
     7da:	3f 93       	push	r19
     7dc:	4f 93       	push	r20
     7de:	5f 93       	push	r21
     7e0:	6f 93       	push	r22
     7e2:	7f 93       	push	r23
     7e4:	8f 93       	push	r24
     7e6:	9f 93       	push	r25
     7e8:	af 93       	push	r26
     7ea:	bf 93       	push	r27
     7ec:	ef 93       	push	r30
     7ee:	ff 93       	push	r31
     7f0:	e0 91 48 20 	lds	r30, 0x2048	; 0x802048 <tc_tcc0_ovf_callback>
     7f4:	f0 91 49 20 	lds	r31, 0x2049	; 0x802049 <tc_tcc0_ovf_callback+0x1>
     7f8:	30 97       	sbiw	r30, 0x00	; 0
     7fa:	09 f0       	breq	.+2      	; 0x7fe <__vector_14+0x34>
     7fc:	19 95       	eicall
     7fe:	ff 91       	pop	r31
     800:	ef 91       	pop	r30
     802:	bf 91       	pop	r27
     804:	af 91       	pop	r26
     806:	9f 91       	pop	r25
     808:	8f 91       	pop	r24
     80a:	7f 91       	pop	r23
     80c:	6f 91       	pop	r22
     80e:	5f 91       	pop	r21
     810:	4f 91       	pop	r20
     812:	3f 91       	pop	r19
     814:	2f 91       	pop	r18
     816:	0f 90       	pop	r0
     818:	0b be       	out	0x3b, r0	; 59
     81a:	0f 90       	pop	r0
     81c:	0f be       	out	0x3f, r0	; 63
     81e:	0f 90       	pop	r0
     820:	1f 90       	pop	r1
     822:	18 95       	reti

00000824 <__vector_15>:
     824:	1f 92       	push	r1
     826:	0f 92       	push	r0
     828:	0f b6       	in	r0, 0x3f	; 63
     82a:	0f 92       	push	r0
     82c:	11 24       	eor	r1, r1
     82e:	0b b6       	in	r0, 0x3b	; 59
     830:	0f 92       	push	r0
     832:	2f 93       	push	r18
     834:	3f 93       	push	r19
     836:	4f 93       	push	r20
     838:	5f 93       	push	r21
     83a:	6f 93       	push	r22
     83c:	7f 93       	push	r23
     83e:	8f 93       	push	r24
     840:	9f 93       	push	r25
     842:	af 93       	push	r26
     844:	bf 93       	push	r27
     846:	ef 93       	push	r30
     848:	ff 93       	push	r31
     84a:	e0 91 46 20 	lds	r30, 0x2046	; 0x802046 <tc_tcc0_err_callback>
     84e:	f0 91 47 20 	lds	r31, 0x2047	; 0x802047 <tc_tcc0_err_callback+0x1>
     852:	30 97       	sbiw	r30, 0x00	; 0
     854:	09 f0       	breq	.+2      	; 0x858 <__vector_15+0x34>
     856:	19 95       	eicall
     858:	ff 91       	pop	r31
     85a:	ef 91       	pop	r30
     85c:	bf 91       	pop	r27
     85e:	af 91       	pop	r26
     860:	9f 91       	pop	r25
     862:	8f 91       	pop	r24
     864:	7f 91       	pop	r23
     866:	6f 91       	pop	r22
     868:	5f 91       	pop	r21
     86a:	4f 91       	pop	r20
     86c:	3f 91       	pop	r19
     86e:	2f 91       	pop	r18
     870:	0f 90       	pop	r0
     872:	0b be       	out	0x3b, r0	; 59
     874:	0f 90       	pop	r0
     876:	0f be       	out	0x3f, r0	; 63
     878:	0f 90       	pop	r0
     87a:	1f 90       	pop	r1
     87c:	18 95       	reti

0000087e <__vector_16>:
     87e:	1f 92       	push	r1
     880:	0f 92       	push	r0
     882:	0f b6       	in	r0, 0x3f	; 63
     884:	0f 92       	push	r0
     886:	11 24       	eor	r1, r1
     888:	0b b6       	in	r0, 0x3b	; 59
     88a:	0f 92       	push	r0
     88c:	2f 93       	push	r18
     88e:	3f 93       	push	r19
     890:	4f 93       	push	r20
     892:	5f 93       	push	r21
     894:	6f 93       	push	r22
     896:	7f 93       	push	r23
     898:	8f 93       	push	r24
     89a:	9f 93       	push	r25
     89c:	af 93       	push	r26
     89e:	bf 93       	push	r27
     8a0:	ef 93       	push	r30
     8a2:	ff 93       	push	r31
     8a4:	e0 91 44 20 	lds	r30, 0x2044	; 0x802044 <tc_tcc0_cca_callback>
     8a8:	f0 91 45 20 	lds	r31, 0x2045	; 0x802045 <tc_tcc0_cca_callback+0x1>
     8ac:	30 97       	sbiw	r30, 0x00	; 0
     8ae:	09 f0       	breq	.+2      	; 0x8b2 <__vector_16+0x34>
     8b0:	19 95       	eicall
     8b2:	ff 91       	pop	r31
     8b4:	ef 91       	pop	r30
     8b6:	bf 91       	pop	r27
     8b8:	af 91       	pop	r26
     8ba:	9f 91       	pop	r25
     8bc:	8f 91       	pop	r24
     8be:	7f 91       	pop	r23
     8c0:	6f 91       	pop	r22
     8c2:	5f 91       	pop	r21
     8c4:	4f 91       	pop	r20
     8c6:	3f 91       	pop	r19
     8c8:	2f 91       	pop	r18
     8ca:	0f 90       	pop	r0
     8cc:	0b be       	out	0x3b, r0	; 59
     8ce:	0f 90       	pop	r0
     8d0:	0f be       	out	0x3f, r0	; 63
     8d2:	0f 90       	pop	r0
     8d4:	1f 90       	pop	r1
     8d6:	18 95       	reti

000008d8 <__vector_17>:
     8d8:	1f 92       	push	r1
     8da:	0f 92       	push	r0
     8dc:	0f b6       	in	r0, 0x3f	; 63
     8de:	0f 92       	push	r0
     8e0:	11 24       	eor	r1, r1
     8e2:	0b b6       	in	r0, 0x3b	; 59
     8e4:	0f 92       	push	r0
     8e6:	2f 93       	push	r18
     8e8:	3f 93       	push	r19
     8ea:	4f 93       	push	r20
     8ec:	5f 93       	push	r21
     8ee:	6f 93       	push	r22
     8f0:	7f 93       	push	r23
     8f2:	8f 93       	push	r24
     8f4:	9f 93       	push	r25
     8f6:	af 93       	push	r26
     8f8:	bf 93       	push	r27
     8fa:	ef 93       	push	r30
     8fc:	ff 93       	push	r31
     8fe:	e0 91 42 20 	lds	r30, 0x2042	; 0x802042 <tc_tcc0_ccb_callback>
     902:	f0 91 43 20 	lds	r31, 0x2043	; 0x802043 <tc_tcc0_ccb_callback+0x1>
     906:	30 97       	sbiw	r30, 0x00	; 0
     908:	09 f0       	breq	.+2      	; 0x90c <__vector_17+0x34>
     90a:	19 95       	eicall
     90c:	ff 91       	pop	r31
     90e:	ef 91       	pop	r30
     910:	bf 91       	pop	r27
     912:	af 91       	pop	r26
     914:	9f 91       	pop	r25
     916:	8f 91       	pop	r24
     918:	7f 91       	pop	r23
     91a:	6f 91       	pop	r22
     91c:	5f 91       	pop	r21
     91e:	4f 91       	pop	r20
     920:	3f 91       	pop	r19
     922:	2f 91       	pop	r18
     924:	0f 90       	pop	r0
     926:	0b be       	out	0x3b, r0	; 59
     928:	0f 90       	pop	r0
     92a:	0f be       	out	0x3f, r0	; 63
     92c:	0f 90       	pop	r0
     92e:	1f 90       	pop	r1
     930:	18 95       	reti

00000932 <__vector_18>:
     932:	1f 92       	push	r1
     934:	0f 92       	push	r0
     936:	0f b6       	in	r0, 0x3f	; 63
     938:	0f 92       	push	r0
     93a:	11 24       	eor	r1, r1
     93c:	0b b6       	in	r0, 0x3b	; 59
     93e:	0f 92       	push	r0
     940:	2f 93       	push	r18
     942:	3f 93       	push	r19
     944:	4f 93       	push	r20
     946:	5f 93       	push	r21
     948:	6f 93       	push	r22
     94a:	7f 93       	push	r23
     94c:	8f 93       	push	r24
     94e:	9f 93       	push	r25
     950:	af 93       	push	r26
     952:	bf 93       	push	r27
     954:	ef 93       	push	r30
     956:	ff 93       	push	r31
     958:	e0 91 40 20 	lds	r30, 0x2040	; 0x802040 <tc_tcc0_ccc_callback>
     95c:	f0 91 41 20 	lds	r31, 0x2041	; 0x802041 <tc_tcc0_ccc_callback+0x1>
     960:	30 97       	sbiw	r30, 0x00	; 0
     962:	09 f0       	breq	.+2      	; 0x966 <__vector_18+0x34>
     964:	19 95       	eicall
     966:	ff 91       	pop	r31
     968:	ef 91       	pop	r30
     96a:	bf 91       	pop	r27
     96c:	af 91       	pop	r26
     96e:	9f 91       	pop	r25
     970:	8f 91       	pop	r24
     972:	7f 91       	pop	r23
     974:	6f 91       	pop	r22
     976:	5f 91       	pop	r21
     978:	4f 91       	pop	r20
     97a:	3f 91       	pop	r19
     97c:	2f 91       	pop	r18
     97e:	0f 90       	pop	r0
     980:	0b be       	out	0x3b, r0	; 59
     982:	0f 90       	pop	r0
     984:	0f be       	out	0x3f, r0	; 63
     986:	0f 90       	pop	r0
     988:	1f 90       	pop	r1
     98a:	18 95       	reti

0000098c <__vector_19>:
     98c:	1f 92       	push	r1
     98e:	0f 92       	push	r0
     990:	0f b6       	in	r0, 0x3f	; 63
     992:	0f 92       	push	r0
     994:	11 24       	eor	r1, r1
     996:	0b b6       	in	r0, 0x3b	; 59
     998:	0f 92       	push	r0
     99a:	2f 93       	push	r18
     99c:	3f 93       	push	r19
     99e:	4f 93       	push	r20
     9a0:	5f 93       	push	r21
     9a2:	6f 93       	push	r22
     9a4:	7f 93       	push	r23
     9a6:	8f 93       	push	r24
     9a8:	9f 93       	push	r25
     9aa:	af 93       	push	r26
     9ac:	bf 93       	push	r27
     9ae:	ef 93       	push	r30
     9b0:	ff 93       	push	r31
     9b2:	e0 91 3e 20 	lds	r30, 0x203E	; 0x80203e <tc_tcc0_ccd_callback>
     9b6:	f0 91 3f 20 	lds	r31, 0x203F	; 0x80203f <tc_tcc0_ccd_callback+0x1>
     9ba:	30 97       	sbiw	r30, 0x00	; 0
     9bc:	09 f0       	breq	.+2      	; 0x9c0 <__vector_19+0x34>
     9be:	19 95       	eicall
     9c0:	ff 91       	pop	r31
     9c2:	ef 91       	pop	r30
     9c4:	bf 91       	pop	r27
     9c6:	af 91       	pop	r26
     9c8:	9f 91       	pop	r25
     9ca:	8f 91       	pop	r24
     9cc:	7f 91       	pop	r23
     9ce:	6f 91       	pop	r22
     9d0:	5f 91       	pop	r21
     9d2:	4f 91       	pop	r20
     9d4:	3f 91       	pop	r19
     9d6:	2f 91       	pop	r18
     9d8:	0f 90       	pop	r0
     9da:	0b be       	out	0x3b, r0	; 59
     9dc:	0f 90       	pop	r0
     9de:	0f be       	out	0x3f, r0	; 63
     9e0:	0f 90       	pop	r0
     9e2:	1f 90       	pop	r1
     9e4:	18 95       	reti

000009e6 <__vector_20>:
     9e6:	1f 92       	push	r1
     9e8:	0f 92       	push	r0
     9ea:	0f b6       	in	r0, 0x3f	; 63
     9ec:	0f 92       	push	r0
     9ee:	11 24       	eor	r1, r1
     9f0:	0b b6       	in	r0, 0x3b	; 59
     9f2:	0f 92       	push	r0
     9f4:	2f 93       	push	r18
     9f6:	3f 93       	push	r19
     9f8:	4f 93       	push	r20
     9fa:	5f 93       	push	r21
     9fc:	6f 93       	push	r22
     9fe:	7f 93       	push	r23
     a00:	8f 93       	push	r24
     a02:	9f 93       	push	r25
     a04:	af 93       	push	r26
     a06:	bf 93       	push	r27
     a08:	ef 93       	push	r30
     a0a:	ff 93       	push	r31
     a0c:	e0 91 3c 20 	lds	r30, 0x203C	; 0x80203c <tc_tcc1_ovf_callback>
     a10:	f0 91 3d 20 	lds	r31, 0x203D	; 0x80203d <tc_tcc1_ovf_callback+0x1>
     a14:	30 97       	sbiw	r30, 0x00	; 0
     a16:	09 f0       	breq	.+2      	; 0xa1a <__vector_20+0x34>
     a18:	19 95       	eicall
     a1a:	ff 91       	pop	r31
     a1c:	ef 91       	pop	r30
     a1e:	bf 91       	pop	r27
     a20:	af 91       	pop	r26
     a22:	9f 91       	pop	r25
     a24:	8f 91       	pop	r24
     a26:	7f 91       	pop	r23
     a28:	6f 91       	pop	r22
     a2a:	5f 91       	pop	r21
     a2c:	4f 91       	pop	r20
     a2e:	3f 91       	pop	r19
     a30:	2f 91       	pop	r18
     a32:	0f 90       	pop	r0
     a34:	0b be       	out	0x3b, r0	; 59
     a36:	0f 90       	pop	r0
     a38:	0f be       	out	0x3f, r0	; 63
     a3a:	0f 90       	pop	r0
     a3c:	1f 90       	pop	r1
     a3e:	18 95       	reti

00000a40 <__vector_21>:
     a40:	1f 92       	push	r1
     a42:	0f 92       	push	r0
     a44:	0f b6       	in	r0, 0x3f	; 63
     a46:	0f 92       	push	r0
     a48:	11 24       	eor	r1, r1
     a4a:	0b b6       	in	r0, 0x3b	; 59
     a4c:	0f 92       	push	r0
     a4e:	2f 93       	push	r18
     a50:	3f 93       	push	r19
     a52:	4f 93       	push	r20
     a54:	5f 93       	push	r21
     a56:	6f 93       	push	r22
     a58:	7f 93       	push	r23
     a5a:	8f 93       	push	r24
     a5c:	9f 93       	push	r25
     a5e:	af 93       	push	r26
     a60:	bf 93       	push	r27
     a62:	ef 93       	push	r30
     a64:	ff 93       	push	r31
     a66:	e0 91 3a 20 	lds	r30, 0x203A	; 0x80203a <tc_tcc1_err_callback>
     a6a:	f0 91 3b 20 	lds	r31, 0x203B	; 0x80203b <tc_tcc1_err_callback+0x1>
     a6e:	30 97       	sbiw	r30, 0x00	; 0
     a70:	09 f0       	breq	.+2      	; 0xa74 <__vector_21+0x34>
     a72:	19 95       	eicall
     a74:	ff 91       	pop	r31
     a76:	ef 91       	pop	r30
     a78:	bf 91       	pop	r27
     a7a:	af 91       	pop	r26
     a7c:	9f 91       	pop	r25
     a7e:	8f 91       	pop	r24
     a80:	7f 91       	pop	r23
     a82:	6f 91       	pop	r22
     a84:	5f 91       	pop	r21
     a86:	4f 91       	pop	r20
     a88:	3f 91       	pop	r19
     a8a:	2f 91       	pop	r18
     a8c:	0f 90       	pop	r0
     a8e:	0b be       	out	0x3b, r0	; 59
     a90:	0f 90       	pop	r0
     a92:	0f be       	out	0x3f, r0	; 63
     a94:	0f 90       	pop	r0
     a96:	1f 90       	pop	r1
     a98:	18 95       	reti

00000a9a <__vector_22>:
     a9a:	1f 92       	push	r1
     a9c:	0f 92       	push	r0
     a9e:	0f b6       	in	r0, 0x3f	; 63
     aa0:	0f 92       	push	r0
     aa2:	11 24       	eor	r1, r1
     aa4:	0b b6       	in	r0, 0x3b	; 59
     aa6:	0f 92       	push	r0
     aa8:	2f 93       	push	r18
     aaa:	3f 93       	push	r19
     aac:	4f 93       	push	r20
     aae:	5f 93       	push	r21
     ab0:	6f 93       	push	r22
     ab2:	7f 93       	push	r23
     ab4:	8f 93       	push	r24
     ab6:	9f 93       	push	r25
     ab8:	af 93       	push	r26
     aba:	bf 93       	push	r27
     abc:	ef 93       	push	r30
     abe:	ff 93       	push	r31
     ac0:	e0 91 38 20 	lds	r30, 0x2038	; 0x802038 <tc_tcc1_cca_callback>
     ac4:	f0 91 39 20 	lds	r31, 0x2039	; 0x802039 <tc_tcc1_cca_callback+0x1>
     ac8:	30 97       	sbiw	r30, 0x00	; 0
     aca:	09 f0       	breq	.+2      	; 0xace <__vector_22+0x34>
     acc:	19 95       	eicall
     ace:	ff 91       	pop	r31
     ad0:	ef 91       	pop	r30
     ad2:	bf 91       	pop	r27
     ad4:	af 91       	pop	r26
     ad6:	9f 91       	pop	r25
     ad8:	8f 91       	pop	r24
     ada:	7f 91       	pop	r23
     adc:	6f 91       	pop	r22
     ade:	5f 91       	pop	r21
     ae0:	4f 91       	pop	r20
     ae2:	3f 91       	pop	r19
     ae4:	2f 91       	pop	r18
     ae6:	0f 90       	pop	r0
     ae8:	0b be       	out	0x3b, r0	; 59
     aea:	0f 90       	pop	r0
     aec:	0f be       	out	0x3f, r0	; 63
     aee:	0f 90       	pop	r0
     af0:	1f 90       	pop	r1
     af2:	18 95       	reti

00000af4 <__vector_23>:
     af4:	1f 92       	push	r1
     af6:	0f 92       	push	r0
     af8:	0f b6       	in	r0, 0x3f	; 63
     afa:	0f 92       	push	r0
     afc:	11 24       	eor	r1, r1
     afe:	0b b6       	in	r0, 0x3b	; 59
     b00:	0f 92       	push	r0
     b02:	2f 93       	push	r18
     b04:	3f 93       	push	r19
     b06:	4f 93       	push	r20
     b08:	5f 93       	push	r21
     b0a:	6f 93       	push	r22
     b0c:	7f 93       	push	r23
     b0e:	8f 93       	push	r24
     b10:	9f 93       	push	r25
     b12:	af 93       	push	r26
     b14:	bf 93       	push	r27
     b16:	ef 93       	push	r30
     b18:	ff 93       	push	r31
     b1a:	e0 91 36 20 	lds	r30, 0x2036	; 0x802036 <tc_tcc1_ccb_callback>
     b1e:	f0 91 37 20 	lds	r31, 0x2037	; 0x802037 <tc_tcc1_ccb_callback+0x1>
     b22:	30 97       	sbiw	r30, 0x00	; 0
     b24:	09 f0       	breq	.+2      	; 0xb28 <__vector_23+0x34>
     b26:	19 95       	eicall
     b28:	ff 91       	pop	r31
     b2a:	ef 91       	pop	r30
     b2c:	bf 91       	pop	r27
     b2e:	af 91       	pop	r26
     b30:	9f 91       	pop	r25
     b32:	8f 91       	pop	r24
     b34:	7f 91       	pop	r23
     b36:	6f 91       	pop	r22
     b38:	5f 91       	pop	r21
     b3a:	4f 91       	pop	r20
     b3c:	3f 91       	pop	r19
     b3e:	2f 91       	pop	r18
     b40:	0f 90       	pop	r0
     b42:	0b be       	out	0x3b, r0	; 59
     b44:	0f 90       	pop	r0
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	0f 90       	pop	r0
     b4a:	1f 90       	pop	r1
     b4c:	18 95       	reti

00000b4e <__vector_77>:
     b4e:	1f 92       	push	r1
     b50:	0f 92       	push	r0
     b52:	0f b6       	in	r0, 0x3f	; 63
     b54:	0f 92       	push	r0
     b56:	11 24       	eor	r1, r1
     b58:	0b b6       	in	r0, 0x3b	; 59
     b5a:	0f 92       	push	r0
     b5c:	2f 93       	push	r18
     b5e:	3f 93       	push	r19
     b60:	4f 93       	push	r20
     b62:	5f 93       	push	r21
     b64:	6f 93       	push	r22
     b66:	7f 93       	push	r23
     b68:	8f 93       	push	r24
     b6a:	9f 93       	push	r25
     b6c:	af 93       	push	r26
     b6e:	bf 93       	push	r27
     b70:	ef 93       	push	r30
     b72:	ff 93       	push	r31
     b74:	e0 91 34 20 	lds	r30, 0x2034	; 0x802034 <tc_tcd0_ovf_callback>
     b78:	f0 91 35 20 	lds	r31, 0x2035	; 0x802035 <tc_tcd0_ovf_callback+0x1>
     b7c:	30 97       	sbiw	r30, 0x00	; 0
     b7e:	09 f0       	breq	.+2      	; 0xb82 <__vector_77+0x34>
     b80:	19 95       	eicall
     b82:	ff 91       	pop	r31
     b84:	ef 91       	pop	r30
     b86:	bf 91       	pop	r27
     b88:	af 91       	pop	r26
     b8a:	9f 91       	pop	r25
     b8c:	8f 91       	pop	r24
     b8e:	7f 91       	pop	r23
     b90:	6f 91       	pop	r22
     b92:	5f 91       	pop	r21
     b94:	4f 91       	pop	r20
     b96:	3f 91       	pop	r19
     b98:	2f 91       	pop	r18
     b9a:	0f 90       	pop	r0
     b9c:	0b be       	out	0x3b, r0	; 59
     b9e:	0f 90       	pop	r0
     ba0:	0f be       	out	0x3f, r0	; 63
     ba2:	0f 90       	pop	r0
     ba4:	1f 90       	pop	r1
     ba6:	18 95       	reti

00000ba8 <__vector_78>:
     ba8:	1f 92       	push	r1
     baa:	0f 92       	push	r0
     bac:	0f b6       	in	r0, 0x3f	; 63
     bae:	0f 92       	push	r0
     bb0:	11 24       	eor	r1, r1
     bb2:	0b b6       	in	r0, 0x3b	; 59
     bb4:	0f 92       	push	r0
     bb6:	2f 93       	push	r18
     bb8:	3f 93       	push	r19
     bba:	4f 93       	push	r20
     bbc:	5f 93       	push	r21
     bbe:	6f 93       	push	r22
     bc0:	7f 93       	push	r23
     bc2:	8f 93       	push	r24
     bc4:	9f 93       	push	r25
     bc6:	af 93       	push	r26
     bc8:	bf 93       	push	r27
     bca:	ef 93       	push	r30
     bcc:	ff 93       	push	r31
     bce:	e0 91 32 20 	lds	r30, 0x2032	; 0x802032 <tc_tcd0_err_callback>
     bd2:	f0 91 33 20 	lds	r31, 0x2033	; 0x802033 <tc_tcd0_err_callback+0x1>
     bd6:	30 97       	sbiw	r30, 0x00	; 0
     bd8:	09 f0       	breq	.+2      	; 0xbdc <__vector_78+0x34>
     bda:	19 95       	eicall
     bdc:	ff 91       	pop	r31
     bde:	ef 91       	pop	r30
     be0:	bf 91       	pop	r27
     be2:	af 91       	pop	r26
     be4:	9f 91       	pop	r25
     be6:	8f 91       	pop	r24
     be8:	7f 91       	pop	r23
     bea:	6f 91       	pop	r22
     bec:	5f 91       	pop	r21
     bee:	4f 91       	pop	r20
     bf0:	3f 91       	pop	r19
     bf2:	2f 91       	pop	r18
     bf4:	0f 90       	pop	r0
     bf6:	0b be       	out	0x3b, r0	; 59
     bf8:	0f 90       	pop	r0
     bfa:	0f be       	out	0x3f, r0	; 63
     bfc:	0f 90       	pop	r0
     bfe:	1f 90       	pop	r1
     c00:	18 95       	reti

00000c02 <__vector_79>:
     c02:	1f 92       	push	r1
     c04:	0f 92       	push	r0
     c06:	0f b6       	in	r0, 0x3f	; 63
     c08:	0f 92       	push	r0
     c0a:	11 24       	eor	r1, r1
     c0c:	0b b6       	in	r0, 0x3b	; 59
     c0e:	0f 92       	push	r0
     c10:	2f 93       	push	r18
     c12:	3f 93       	push	r19
     c14:	4f 93       	push	r20
     c16:	5f 93       	push	r21
     c18:	6f 93       	push	r22
     c1a:	7f 93       	push	r23
     c1c:	8f 93       	push	r24
     c1e:	9f 93       	push	r25
     c20:	af 93       	push	r26
     c22:	bf 93       	push	r27
     c24:	ef 93       	push	r30
     c26:	ff 93       	push	r31
     c28:	e0 91 30 20 	lds	r30, 0x2030	; 0x802030 <tc_tcd0_cca_callback>
     c2c:	f0 91 31 20 	lds	r31, 0x2031	; 0x802031 <tc_tcd0_cca_callback+0x1>
     c30:	30 97       	sbiw	r30, 0x00	; 0
     c32:	09 f0       	breq	.+2      	; 0xc36 <__vector_79+0x34>
     c34:	19 95       	eicall
     c36:	ff 91       	pop	r31
     c38:	ef 91       	pop	r30
     c3a:	bf 91       	pop	r27
     c3c:	af 91       	pop	r26
     c3e:	9f 91       	pop	r25
     c40:	8f 91       	pop	r24
     c42:	7f 91       	pop	r23
     c44:	6f 91       	pop	r22
     c46:	5f 91       	pop	r21
     c48:	4f 91       	pop	r20
     c4a:	3f 91       	pop	r19
     c4c:	2f 91       	pop	r18
     c4e:	0f 90       	pop	r0
     c50:	0b be       	out	0x3b, r0	; 59
     c52:	0f 90       	pop	r0
     c54:	0f be       	out	0x3f, r0	; 63
     c56:	0f 90       	pop	r0
     c58:	1f 90       	pop	r1
     c5a:	18 95       	reti

00000c5c <__vector_80>:
     c5c:	1f 92       	push	r1
     c5e:	0f 92       	push	r0
     c60:	0f b6       	in	r0, 0x3f	; 63
     c62:	0f 92       	push	r0
     c64:	11 24       	eor	r1, r1
     c66:	0b b6       	in	r0, 0x3b	; 59
     c68:	0f 92       	push	r0
     c6a:	2f 93       	push	r18
     c6c:	3f 93       	push	r19
     c6e:	4f 93       	push	r20
     c70:	5f 93       	push	r21
     c72:	6f 93       	push	r22
     c74:	7f 93       	push	r23
     c76:	8f 93       	push	r24
     c78:	9f 93       	push	r25
     c7a:	af 93       	push	r26
     c7c:	bf 93       	push	r27
     c7e:	ef 93       	push	r30
     c80:	ff 93       	push	r31
     c82:	e0 91 2e 20 	lds	r30, 0x202E	; 0x80202e <tc_tcd0_ccb_callback>
     c86:	f0 91 2f 20 	lds	r31, 0x202F	; 0x80202f <tc_tcd0_ccb_callback+0x1>
     c8a:	30 97       	sbiw	r30, 0x00	; 0
     c8c:	09 f0       	breq	.+2      	; 0xc90 <__vector_80+0x34>
     c8e:	19 95       	eicall
     c90:	ff 91       	pop	r31
     c92:	ef 91       	pop	r30
     c94:	bf 91       	pop	r27
     c96:	af 91       	pop	r26
     c98:	9f 91       	pop	r25
     c9a:	8f 91       	pop	r24
     c9c:	7f 91       	pop	r23
     c9e:	6f 91       	pop	r22
     ca0:	5f 91       	pop	r21
     ca2:	4f 91       	pop	r20
     ca4:	3f 91       	pop	r19
     ca6:	2f 91       	pop	r18
     ca8:	0f 90       	pop	r0
     caa:	0b be       	out	0x3b, r0	; 59
     cac:	0f 90       	pop	r0
     cae:	0f be       	out	0x3f, r0	; 63
     cb0:	0f 90       	pop	r0
     cb2:	1f 90       	pop	r1
     cb4:	18 95       	reti

00000cb6 <__vector_81>:
     cb6:	1f 92       	push	r1
     cb8:	0f 92       	push	r0
     cba:	0f b6       	in	r0, 0x3f	; 63
     cbc:	0f 92       	push	r0
     cbe:	11 24       	eor	r1, r1
     cc0:	0b b6       	in	r0, 0x3b	; 59
     cc2:	0f 92       	push	r0
     cc4:	2f 93       	push	r18
     cc6:	3f 93       	push	r19
     cc8:	4f 93       	push	r20
     cca:	5f 93       	push	r21
     ccc:	6f 93       	push	r22
     cce:	7f 93       	push	r23
     cd0:	8f 93       	push	r24
     cd2:	9f 93       	push	r25
     cd4:	af 93       	push	r26
     cd6:	bf 93       	push	r27
     cd8:	ef 93       	push	r30
     cda:	ff 93       	push	r31
     cdc:	e0 91 2c 20 	lds	r30, 0x202C	; 0x80202c <tc_tcd0_ccc_callback>
     ce0:	f0 91 2d 20 	lds	r31, 0x202D	; 0x80202d <tc_tcd0_ccc_callback+0x1>
     ce4:	30 97       	sbiw	r30, 0x00	; 0
     ce6:	09 f0       	breq	.+2      	; 0xcea <__vector_81+0x34>
     ce8:	19 95       	eicall
     cea:	ff 91       	pop	r31
     cec:	ef 91       	pop	r30
     cee:	bf 91       	pop	r27
     cf0:	af 91       	pop	r26
     cf2:	9f 91       	pop	r25
     cf4:	8f 91       	pop	r24
     cf6:	7f 91       	pop	r23
     cf8:	6f 91       	pop	r22
     cfa:	5f 91       	pop	r21
     cfc:	4f 91       	pop	r20
     cfe:	3f 91       	pop	r19
     d00:	2f 91       	pop	r18
     d02:	0f 90       	pop	r0
     d04:	0b be       	out	0x3b, r0	; 59
     d06:	0f 90       	pop	r0
     d08:	0f be       	out	0x3f, r0	; 63
     d0a:	0f 90       	pop	r0
     d0c:	1f 90       	pop	r1
     d0e:	18 95       	reti

00000d10 <__vector_82>:
     d10:	1f 92       	push	r1
     d12:	0f 92       	push	r0
     d14:	0f b6       	in	r0, 0x3f	; 63
     d16:	0f 92       	push	r0
     d18:	11 24       	eor	r1, r1
     d1a:	0b b6       	in	r0, 0x3b	; 59
     d1c:	0f 92       	push	r0
     d1e:	2f 93       	push	r18
     d20:	3f 93       	push	r19
     d22:	4f 93       	push	r20
     d24:	5f 93       	push	r21
     d26:	6f 93       	push	r22
     d28:	7f 93       	push	r23
     d2a:	8f 93       	push	r24
     d2c:	9f 93       	push	r25
     d2e:	af 93       	push	r26
     d30:	bf 93       	push	r27
     d32:	ef 93       	push	r30
     d34:	ff 93       	push	r31
     d36:	e0 91 2a 20 	lds	r30, 0x202A	; 0x80202a <tc_tcd0_ccd_callback>
     d3a:	f0 91 2b 20 	lds	r31, 0x202B	; 0x80202b <tc_tcd0_ccd_callback+0x1>
     d3e:	30 97       	sbiw	r30, 0x00	; 0
     d40:	09 f0       	breq	.+2      	; 0xd44 <__vector_82+0x34>
     d42:	19 95       	eicall
     d44:	ff 91       	pop	r31
     d46:	ef 91       	pop	r30
     d48:	bf 91       	pop	r27
     d4a:	af 91       	pop	r26
     d4c:	9f 91       	pop	r25
     d4e:	8f 91       	pop	r24
     d50:	7f 91       	pop	r23
     d52:	6f 91       	pop	r22
     d54:	5f 91       	pop	r21
     d56:	4f 91       	pop	r20
     d58:	3f 91       	pop	r19
     d5a:	2f 91       	pop	r18
     d5c:	0f 90       	pop	r0
     d5e:	0b be       	out	0x3b, r0	; 59
     d60:	0f 90       	pop	r0
     d62:	0f be       	out	0x3f, r0	; 63
     d64:	0f 90       	pop	r0
     d66:	1f 90       	pop	r1
     d68:	18 95       	reti

00000d6a <__vector_83>:
     d6a:	1f 92       	push	r1
     d6c:	0f 92       	push	r0
     d6e:	0f b6       	in	r0, 0x3f	; 63
     d70:	0f 92       	push	r0
     d72:	11 24       	eor	r1, r1
     d74:	0b b6       	in	r0, 0x3b	; 59
     d76:	0f 92       	push	r0
     d78:	2f 93       	push	r18
     d7a:	3f 93       	push	r19
     d7c:	4f 93       	push	r20
     d7e:	5f 93       	push	r21
     d80:	6f 93       	push	r22
     d82:	7f 93       	push	r23
     d84:	8f 93       	push	r24
     d86:	9f 93       	push	r25
     d88:	af 93       	push	r26
     d8a:	bf 93       	push	r27
     d8c:	ef 93       	push	r30
     d8e:	ff 93       	push	r31
     d90:	e0 91 28 20 	lds	r30, 0x2028	; 0x802028 <tc_tcd1_ovf_callback>
     d94:	f0 91 29 20 	lds	r31, 0x2029	; 0x802029 <tc_tcd1_ovf_callback+0x1>
     d98:	30 97       	sbiw	r30, 0x00	; 0
     d9a:	09 f0       	breq	.+2      	; 0xd9e <__vector_83+0x34>
     d9c:	19 95       	eicall
     d9e:	ff 91       	pop	r31
     da0:	ef 91       	pop	r30
     da2:	bf 91       	pop	r27
     da4:	af 91       	pop	r26
     da6:	9f 91       	pop	r25
     da8:	8f 91       	pop	r24
     daa:	7f 91       	pop	r23
     dac:	6f 91       	pop	r22
     dae:	5f 91       	pop	r21
     db0:	4f 91       	pop	r20
     db2:	3f 91       	pop	r19
     db4:	2f 91       	pop	r18
     db6:	0f 90       	pop	r0
     db8:	0b be       	out	0x3b, r0	; 59
     dba:	0f 90       	pop	r0
     dbc:	0f be       	out	0x3f, r0	; 63
     dbe:	0f 90       	pop	r0
     dc0:	1f 90       	pop	r1
     dc2:	18 95       	reti

00000dc4 <__vector_84>:
     dc4:	1f 92       	push	r1
     dc6:	0f 92       	push	r0
     dc8:	0f b6       	in	r0, 0x3f	; 63
     dca:	0f 92       	push	r0
     dcc:	11 24       	eor	r1, r1
     dce:	0b b6       	in	r0, 0x3b	; 59
     dd0:	0f 92       	push	r0
     dd2:	2f 93       	push	r18
     dd4:	3f 93       	push	r19
     dd6:	4f 93       	push	r20
     dd8:	5f 93       	push	r21
     dda:	6f 93       	push	r22
     ddc:	7f 93       	push	r23
     dde:	8f 93       	push	r24
     de0:	9f 93       	push	r25
     de2:	af 93       	push	r26
     de4:	bf 93       	push	r27
     de6:	ef 93       	push	r30
     de8:	ff 93       	push	r31
     dea:	e0 91 26 20 	lds	r30, 0x2026	; 0x802026 <tc_tcd1_err_callback>
     dee:	f0 91 27 20 	lds	r31, 0x2027	; 0x802027 <tc_tcd1_err_callback+0x1>
     df2:	30 97       	sbiw	r30, 0x00	; 0
     df4:	09 f0       	breq	.+2      	; 0xdf8 <__vector_84+0x34>
     df6:	19 95       	eicall
     df8:	ff 91       	pop	r31
     dfa:	ef 91       	pop	r30
     dfc:	bf 91       	pop	r27
     dfe:	af 91       	pop	r26
     e00:	9f 91       	pop	r25
     e02:	8f 91       	pop	r24
     e04:	7f 91       	pop	r23
     e06:	6f 91       	pop	r22
     e08:	5f 91       	pop	r21
     e0a:	4f 91       	pop	r20
     e0c:	3f 91       	pop	r19
     e0e:	2f 91       	pop	r18
     e10:	0f 90       	pop	r0
     e12:	0b be       	out	0x3b, r0	; 59
     e14:	0f 90       	pop	r0
     e16:	0f be       	out	0x3f, r0	; 63
     e18:	0f 90       	pop	r0
     e1a:	1f 90       	pop	r1
     e1c:	18 95       	reti

00000e1e <__vector_85>:
     e1e:	1f 92       	push	r1
     e20:	0f 92       	push	r0
     e22:	0f b6       	in	r0, 0x3f	; 63
     e24:	0f 92       	push	r0
     e26:	11 24       	eor	r1, r1
     e28:	0b b6       	in	r0, 0x3b	; 59
     e2a:	0f 92       	push	r0
     e2c:	2f 93       	push	r18
     e2e:	3f 93       	push	r19
     e30:	4f 93       	push	r20
     e32:	5f 93       	push	r21
     e34:	6f 93       	push	r22
     e36:	7f 93       	push	r23
     e38:	8f 93       	push	r24
     e3a:	9f 93       	push	r25
     e3c:	af 93       	push	r26
     e3e:	bf 93       	push	r27
     e40:	ef 93       	push	r30
     e42:	ff 93       	push	r31
     e44:	e0 91 24 20 	lds	r30, 0x2024	; 0x802024 <tc_tcd1_cca_callback>
     e48:	f0 91 25 20 	lds	r31, 0x2025	; 0x802025 <tc_tcd1_cca_callback+0x1>
     e4c:	30 97       	sbiw	r30, 0x00	; 0
     e4e:	09 f0       	breq	.+2      	; 0xe52 <__vector_85+0x34>
     e50:	19 95       	eicall
     e52:	ff 91       	pop	r31
     e54:	ef 91       	pop	r30
     e56:	bf 91       	pop	r27
     e58:	af 91       	pop	r26
     e5a:	9f 91       	pop	r25
     e5c:	8f 91       	pop	r24
     e5e:	7f 91       	pop	r23
     e60:	6f 91       	pop	r22
     e62:	5f 91       	pop	r21
     e64:	4f 91       	pop	r20
     e66:	3f 91       	pop	r19
     e68:	2f 91       	pop	r18
     e6a:	0f 90       	pop	r0
     e6c:	0b be       	out	0x3b, r0	; 59
     e6e:	0f 90       	pop	r0
     e70:	0f be       	out	0x3f, r0	; 63
     e72:	0f 90       	pop	r0
     e74:	1f 90       	pop	r1
     e76:	18 95       	reti

00000e78 <__vector_86>:
     e78:	1f 92       	push	r1
     e7a:	0f 92       	push	r0
     e7c:	0f b6       	in	r0, 0x3f	; 63
     e7e:	0f 92       	push	r0
     e80:	11 24       	eor	r1, r1
     e82:	0b b6       	in	r0, 0x3b	; 59
     e84:	0f 92       	push	r0
     e86:	2f 93       	push	r18
     e88:	3f 93       	push	r19
     e8a:	4f 93       	push	r20
     e8c:	5f 93       	push	r21
     e8e:	6f 93       	push	r22
     e90:	7f 93       	push	r23
     e92:	8f 93       	push	r24
     e94:	9f 93       	push	r25
     e96:	af 93       	push	r26
     e98:	bf 93       	push	r27
     e9a:	ef 93       	push	r30
     e9c:	ff 93       	push	r31
     e9e:	e0 91 22 20 	lds	r30, 0x2022	; 0x802022 <tc_tcd1_ccb_callback>
     ea2:	f0 91 23 20 	lds	r31, 0x2023	; 0x802023 <tc_tcd1_ccb_callback+0x1>
     ea6:	30 97       	sbiw	r30, 0x00	; 0
     ea8:	09 f0       	breq	.+2      	; 0xeac <__vector_86+0x34>
     eaa:	19 95       	eicall
     eac:	ff 91       	pop	r31
     eae:	ef 91       	pop	r30
     eb0:	bf 91       	pop	r27
     eb2:	af 91       	pop	r26
     eb4:	9f 91       	pop	r25
     eb6:	8f 91       	pop	r24
     eb8:	7f 91       	pop	r23
     eba:	6f 91       	pop	r22
     ebc:	5f 91       	pop	r21
     ebe:	4f 91       	pop	r20
     ec0:	3f 91       	pop	r19
     ec2:	2f 91       	pop	r18
     ec4:	0f 90       	pop	r0
     ec6:	0b be       	out	0x3b, r0	; 59
     ec8:	0f 90       	pop	r0
     eca:	0f be       	out	0x3f, r0	; 63
     ecc:	0f 90       	pop	r0
     ece:	1f 90       	pop	r1
     ed0:	18 95       	reti

00000ed2 <__vector_47>:
     ed2:	1f 92       	push	r1
     ed4:	0f 92       	push	r0
     ed6:	0f b6       	in	r0, 0x3f	; 63
     ed8:	0f 92       	push	r0
     eda:	11 24       	eor	r1, r1
     edc:	0b b6       	in	r0, 0x3b	; 59
     ede:	0f 92       	push	r0
     ee0:	2f 93       	push	r18
     ee2:	3f 93       	push	r19
     ee4:	4f 93       	push	r20
     ee6:	5f 93       	push	r21
     ee8:	6f 93       	push	r22
     eea:	7f 93       	push	r23
     eec:	8f 93       	push	r24
     eee:	9f 93       	push	r25
     ef0:	af 93       	push	r26
     ef2:	bf 93       	push	r27
     ef4:	ef 93       	push	r30
     ef6:	ff 93       	push	r31
     ef8:	e0 91 20 20 	lds	r30, 0x2020	; 0x802020 <tc_tce0_ovf_callback>
     efc:	f0 91 21 20 	lds	r31, 0x2021	; 0x802021 <tc_tce0_ovf_callback+0x1>
     f00:	30 97       	sbiw	r30, 0x00	; 0
     f02:	09 f0       	breq	.+2      	; 0xf06 <__vector_47+0x34>
     f04:	19 95       	eicall
     f06:	ff 91       	pop	r31
     f08:	ef 91       	pop	r30
     f0a:	bf 91       	pop	r27
     f0c:	af 91       	pop	r26
     f0e:	9f 91       	pop	r25
     f10:	8f 91       	pop	r24
     f12:	7f 91       	pop	r23
     f14:	6f 91       	pop	r22
     f16:	5f 91       	pop	r21
     f18:	4f 91       	pop	r20
     f1a:	3f 91       	pop	r19
     f1c:	2f 91       	pop	r18
     f1e:	0f 90       	pop	r0
     f20:	0b be       	out	0x3b, r0	; 59
     f22:	0f 90       	pop	r0
     f24:	0f be       	out	0x3f, r0	; 63
     f26:	0f 90       	pop	r0
     f28:	1f 90       	pop	r1
     f2a:	18 95       	reti

00000f2c <__vector_48>:
     f2c:	1f 92       	push	r1
     f2e:	0f 92       	push	r0
     f30:	0f b6       	in	r0, 0x3f	; 63
     f32:	0f 92       	push	r0
     f34:	11 24       	eor	r1, r1
     f36:	0b b6       	in	r0, 0x3b	; 59
     f38:	0f 92       	push	r0
     f3a:	2f 93       	push	r18
     f3c:	3f 93       	push	r19
     f3e:	4f 93       	push	r20
     f40:	5f 93       	push	r21
     f42:	6f 93       	push	r22
     f44:	7f 93       	push	r23
     f46:	8f 93       	push	r24
     f48:	9f 93       	push	r25
     f4a:	af 93       	push	r26
     f4c:	bf 93       	push	r27
     f4e:	ef 93       	push	r30
     f50:	ff 93       	push	r31
     f52:	e0 91 1e 20 	lds	r30, 0x201E	; 0x80201e <tc_tce0_err_callback>
     f56:	f0 91 1f 20 	lds	r31, 0x201F	; 0x80201f <tc_tce0_err_callback+0x1>
     f5a:	30 97       	sbiw	r30, 0x00	; 0
     f5c:	09 f0       	breq	.+2      	; 0xf60 <__vector_48+0x34>
     f5e:	19 95       	eicall
     f60:	ff 91       	pop	r31
     f62:	ef 91       	pop	r30
     f64:	bf 91       	pop	r27
     f66:	af 91       	pop	r26
     f68:	9f 91       	pop	r25
     f6a:	8f 91       	pop	r24
     f6c:	7f 91       	pop	r23
     f6e:	6f 91       	pop	r22
     f70:	5f 91       	pop	r21
     f72:	4f 91       	pop	r20
     f74:	3f 91       	pop	r19
     f76:	2f 91       	pop	r18
     f78:	0f 90       	pop	r0
     f7a:	0b be       	out	0x3b, r0	; 59
     f7c:	0f 90       	pop	r0
     f7e:	0f be       	out	0x3f, r0	; 63
     f80:	0f 90       	pop	r0
     f82:	1f 90       	pop	r1
     f84:	18 95       	reti

00000f86 <__vector_49>:
     f86:	1f 92       	push	r1
     f88:	0f 92       	push	r0
     f8a:	0f b6       	in	r0, 0x3f	; 63
     f8c:	0f 92       	push	r0
     f8e:	11 24       	eor	r1, r1
     f90:	0b b6       	in	r0, 0x3b	; 59
     f92:	0f 92       	push	r0
     f94:	2f 93       	push	r18
     f96:	3f 93       	push	r19
     f98:	4f 93       	push	r20
     f9a:	5f 93       	push	r21
     f9c:	6f 93       	push	r22
     f9e:	7f 93       	push	r23
     fa0:	8f 93       	push	r24
     fa2:	9f 93       	push	r25
     fa4:	af 93       	push	r26
     fa6:	bf 93       	push	r27
     fa8:	ef 93       	push	r30
     faa:	ff 93       	push	r31
     fac:	e0 91 1c 20 	lds	r30, 0x201C	; 0x80201c <tc_tce0_cca_callback>
     fb0:	f0 91 1d 20 	lds	r31, 0x201D	; 0x80201d <tc_tce0_cca_callback+0x1>
     fb4:	30 97       	sbiw	r30, 0x00	; 0
     fb6:	09 f0       	breq	.+2      	; 0xfba <__vector_49+0x34>
     fb8:	19 95       	eicall
     fba:	ff 91       	pop	r31
     fbc:	ef 91       	pop	r30
     fbe:	bf 91       	pop	r27
     fc0:	af 91       	pop	r26
     fc2:	9f 91       	pop	r25
     fc4:	8f 91       	pop	r24
     fc6:	7f 91       	pop	r23
     fc8:	6f 91       	pop	r22
     fca:	5f 91       	pop	r21
     fcc:	4f 91       	pop	r20
     fce:	3f 91       	pop	r19
     fd0:	2f 91       	pop	r18
     fd2:	0f 90       	pop	r0
     fd4:	0b be       	out	0x3b, r0	; 59
     fd6:	0f 90       	pop	r0
     fd8:	0f be       	out	0x3f, r0	; 63
     fda:	0f 90       	pop	r0
     fdc:	1f 90       	pop	r1
     fde:	18 95       	reti

00000fe0 <__vector_50>:
     fe0:	1f 92       	push	r1
     fe2:	0f 92       	push	r0
     fe4:	0f b6       	in	r0, 0x3f	; 63
     fe6:	0f 92       	push	r0
     fe8:	11 24       	eor	r1, r1
     fea:	0b b6       	in	r0, 0x3b	; 59
     fec:	0f 92       	push	r0
     fee:	2f 93       	push	r18
     ff0:	3f 93       	push	r19
     ff2:	4f 93       	push	r20
     ff4:	5f 93       	push	r21
     ff6:	6f 93       	push	r22
     ff8:	7f 93       	push	r23
     ffa:	8f 93       	push	r24
     ffc:	9f 93       	push	r25
     ffe:	af 93       	push	r26
    1000:	bf 93       	push	r27
    1002:	ef 93       	push	r30
    1004:	ff 93       	push	r31
    1006:	e0 91 1a 20 	lds	r30, 0x201A	; 0x80201a <tc_tce0_ccb_callback>
    100a:	f0 91 1b 20 	lds	r31, 0x201B	; 0x80201b <tc_tce0_ccb_callback+0x1>
    100e:	30 97       	sbiw	r30, 0x00	; 0
    1010:	09 f0       	breq	.+2      	; 0x1014 <__vector_50+0x34>
    1012:	19 95       	eicall
    1014:	ff 91       	pop	r31
    1016:	ef 91       	pop	r30
    1018:	bf 91       	pop	r27
    101a:	af 91       	pop	r26
    101c:	9f 91       	pop	r25
    101e:	8f 91       	pop	r24
    1020:	7f 91       	pop	r23
    1022:	6f 91       	pop	r22
    1024:	5f 91       	pop	r21
    1026:	4f 91       	pop	r20
    1028:	3f 91       	pop	r19
    102a:	2f 91       	pop	r18
    102c:	0f 90       	pop	r0
    102e:	0b be       	out	0x3b, r0	; 59
    1030:	0f 90       	pop	r0
    1032:	0f be       	out	0x3f, r0	; 63
    1034:	0f 90       	pop	r0
    1036:	1f 90       	pop	r1
    1038:	18 95       	reti

0000103a <__vector_51>:
    103a:	1f 92       	push	r1
    103c:	0f 92       	push	r0
    103e:	0f b6       	in	r0, 0x3f	; 63
    1040:	0f 92       	push	r0
    1042:	11 24       	eor	r1, r1
    1044:	0b b6       	in	r0, 0x3b	; 59
    1046:	0f 92       	push	r0
    1048:	2f 93       	push	r18
    104a:	3f 93       	push	r19
    104c:	4f 93       	push	r20
    104e:	5f 93       	push	r21
    1050:	6f 93       	push	r22
    1052:	7f 93       	push	r23
    1054:	8f 93       	push	r24
    1056:	9f 93       	push	r25
    1058:	af 93       	push	r26
    105a:	bf 93       	push	r27
    105c:	ef 93       	push	r30
    105e:	ff 93       	push	r31
    1060:	e0 91 18 20 	lds	r30, 0x2018	; 0x802018 <tc_tce0_ccc_callback>
    1064:	f0 91 19 20 	lds	r31, 0x2019	; 0x802019 <tc_tce0_ccc_callback+0x1>
    1068:	30 97       	sbiw	r30, 0x00	; 0
    106a:	09 f0       	breq	.+2      	; 0x106e <__vector_51+0x34>
    106c:	19 95       	eicall
    106e:	ff 91       	pop	r31
    1070:	ef 91       	pop	r30
    1072:	bf 91       	pop	r27
    1074:	af 91       	pop	r26
    1076:	9f 91       	pop	r25
    1078:	8f 91       	pop	r24
    107a:	7f 91       	pop	r23
    107c:	6f 91       	pop	r22
    107e:	5f 91       	pop	r21
    1080:	4f 91       	pop	r20
    1082:	3f 91       	pop	r19
    1084:	2f 91       	pop	r18
    1086:	0f 90       	pop	r0
    1088:	0b be       	out	0x3b, r0	; 59
    108a:	0f 90       	pop	r0
    108c:	0f be       	out	0x3f, r0	; 63
    108e:	0f 90       	pop	r0
    1090:	1f 90       	pop	r1
    1092:	18 95       	reti

00001094 <__vector_52>:
    1094:	1f 92       	push	r1
    1096:	0f 92       	push	r0
    1098:	0f b6       	in	r0, 0x3f	; 63
    109a:	0f 92       	push	r0
    109c:	11 24       	eor	r1, r1
    109e:	0b b6       	in	r0, 0x3b	; 59
    10a0:	0f 92       	push	r0
    10a2:	2f 93       	push	r18
    10a4:	3f 93       	push	r19
    10a6:	4f 93       	push	r20
    10a8:	5f 93       	push	r21
    10aa:	6f 93       	push	r22
    10ac:	7f 93       	push	r23
    10ae:	8f 93       	push	r24
    10b0:	9f 93       	push	r25
    10b2:	af 93       	push	r26
    10b4:	bf 93       	push	r27
    10b6:	ef 93       	push	r30
    10b8:	ff 93       	push	r31
    10ba:	e0 91 16 20 	lds	r30, 0x2016	; 0x802016 <tc_tce0_ccd_callback>
    10be:	f0 91 17 20 	lds	r31, 0x2017	; 0x802017 <tc_tce0_ccd_callback+0x1>
    10c2:	30 97       	sbiw	r30, 0x00	; 0
    10c4:	09 f0       	breq	.+2      	; 0x10c8 <__vector_52+0x34>
    10c6:	19 95       	eicall
    10c8:	ff 91       	pop	r31
    10ca:	ef 91       	pop	r30
    10cc:	bf 91       	pop	r27
    10ce:	af 91       	pop	r26
    10d0:	9f 91       	pop	r25
    10d2:	8f 91       	pop	r24
    10d4:	7f 91       	pop	r23
    10d6:	6f 91       	pop	r22
    10d8:	5f 91       	pop	r21
    10da:	4f 91       	pop	r20
    10dc:	3f 91       	pop	r19
    10de:	2f 91       	pop	r18
    10e0:	0f 90       	pop	r0
    10e2:	0b be       	out	0x3b, r0	; 59
    10e4:	0f 90       	pop	r0
    10e6:	0f be       	out	0x3f, r0	; 63
    10e8:	0f 90       	pop	r0
    10ea:	1f 90       	pop	r1
    10ec:	18 95       	reti

000010ee <__vector_53>:
    10ee:	1f 92       	push	r1
    10f0:	0f 92       	push	r0
    10f2:	0f b6       	in	r0, 0x3f	; 63
    10f4:	0f 92       	push	r0
    10f6:	11 24       	eor	r1, r1
    10f8:	0b b6       	in	r0, 0x3b	; 59
    10fa:	0f 92       	push	r0
    10fc:	2f 93       	push	r18
    10fe:	3f 93       	push	r19
    1100:	4f 93       	push	r20
    1102:	5f 93       	push	r21
    1104:	6f 93       	push	r22
    1106:	7f 93       	push	r23
    1108:	8f 93       	push	r24
    110a:	9f 93       	push	r25
    110c:	af 93       	push	r26
    110e:	bf 93       	push	r27
    1110:	ef 93       	push	r30
    1112:	ff 93       	push	r31
    1114:	e0 91 14 20 	lds	r30, 0x2014	; 0x802014 <tc_tce1_ovf_callback>
    1118:	f0 91 15 20 	lds	r31, 0x2015	; 0x802015 <tc_tce1_ovf_callback+0x1>
    111c:	30 97       	sbiw	r30, 0x00	; 0
    111e:	09 f0       	breq	.+2      	; 0x1122 <__vector_53+0x34>
    1120:	19 95       	eicall
    1122:	ff 91       	pop	r31
    1124:	ef 91       	pop	r30
    1126:	bf 91       	pop	r27
    1128:	af 91       	pop	r26
    112a:	9f 91       	pop	r25
    112c:	8f 91       	pop	r24
    112e:	7f 91       	pop	r23
    1130:	6f 91       	pop	r22
    1132:	5f 91       	pop	r21
    1134:	4f 91       	pop	r20
    1136:	3f 91       	pop	r19
    1138:	2f 91       	pop	r18
    113a:	0f 90       	pop	r0
    113c:	0b be       	out	0x3b, r0	; 59
    113e:	0f 90       	pop	r0
    1140:	0f be       	out	0x3f, r0	; 63
    1142:	0f 90       	pop	r0
    1144:	1f 90       	pop	r1
    1146:	18 95       	reti

00001148 <__vector_54>:
    1148:	1f 92       	push	r1
    114a:	0f 92       	push	r0
    114c:	0f b6       	in	r0, 0x3f	; 63
    114e:	0f 92       	push	r0
    1150:	11 24       	eor	r1, r1
    1152:	0b b6       	in	r0, 0x3b	; 59
    1154:	0f 92       	push	r0
    1156:	2f 93       	push	r18
    1158:	3f 93       	push	r19
    115a:	4f 93       	push	r20
    115c:	5f 93       	push	r21
    115e:	6f 93       	push	r22
    1160:	7f 93       	push	r23
    1162:	8f 93       	push	r24
    1164:	9f 93       	push	r25
    1166:	af 93       	push	r26
    1168:	bf 93       	push	r27
    116a:	ef 93       	push	r30
    116c:	ff 93       	push	r31
    116e:	e0 91 12 20 	lds	r30, 0x2012	; 0x802012 <tc_tce1_err_callback>
    1172:	f0 91 13 20 	lds	r31, 0x2013	; 0x802013 <tc_tce1_err_callback+0x1>
    1176:	30 97       	sbiw	r30, 0x00	; 0
    1178:	09 f0       	breq	.+2      	; 0x117c <__vector_54+0x34>
    117a:	19 95       	eicall
    117c:	ff 91       	pop	r31
    117e:	ef 91       	pop	r30
    1180:	bf 91       	pop	r27
    1182:	af 91       	pop	r26
    1184:	9f 91       	pop	r25
    1186:	8f 91       	pop	r24
    1188:	7f 91       	pop	r23
    118a:	6f 91       	pop	r22
    118c:	5f 91       	pop	r21
    118e:	4f 91       	pop	r20
    1190:	3f 91       	pop	r19
    1192:	2f 91       	pop	r18
    1194:	0f 90       	pop	r0
    1196:	0b be       	out	0x3b, r0	; 59
    1198:	0f 90       	pop	r0
    119a:	0f be       	out	0x3f, r0	; 63
    119c:	0f 90       	pop	r0
    119e:	1f 90       	pop	r1
    11a0:	18 95       	reti

000011a2 <__vector_55>:
    11a2:	1f 92       	push	r1
    11a4:	0f 92       	push	r0
    11a6:	0f b6       	in	r0, 0x3f	; 63
    11a8:	0f 92       	push	r0
    11aa:	11 24       	eor	r1, r1
    11ac:	0b b6       	in	r0, 0x3b	; 59
    11ae:	0f 92       	push	r0
    11b0:	2f 93       	push	r18
    11b2:	3f 93       	push	r19
    11b4:	4f 93       	push	r20
    11b6:	5f 93       	push	r21
    11b8:	6f 93       	push	r22
    11ba:	7f 93       	push	r23
    11bc:	8f 93       	push	r24
    11be:	9f 93       	push	r25
    11c0:	af 93       	push	r26
    11c2:	bf 93       	push	r27
    11c4:	ef 93       	push	r30
    11c6:	ff 93       	push	r31
    11c8:	e0 91 10 20 	lds	r30, 0x2010	; 0x802010 <tc_tce1_cca_callback>
    11cc:	f0 91 11 20 	lds	r31, 0x2011	; 0x802011 <tc_tce1_cca_callback+0x1>
    11d0:	30 97       	sbiw	r30, 0x00	; 0
    11d2:	09 f0       	breq	.+2      	; 0x11d6 <__vector_55+0x34>
    11d4:	19 95       	eicall
    11d6:	ff 91       	pop	r31
    11d8:	ef 91       	pop	r30
    11da:	bf 91       	pop	r27
    11dc:	af 91       	pop	r26
    11de:	9f 91       	pop	r25
    11e0:	8f 91       	pop	r24
    11e2:	7f 91       	pop	r23
    11e4:	6f 91       	pop	r22
    11e6:	5f 91       	pop	r21
    11e8:	4f 91       	pop	r20
    11ea:	3f 91       	pop	r19
    11ec:	2f 91       	pop	r18
    11ee:	0f 90       	pop	r0
    11f0:	0b be       	out	0x3b, r0	; 59
    11f2:	0f 90       	pop	r0
    11f4:	0f be       	out	0x3f, r0	; 63
    11f6:	0f 90       	pop	r0
    11f8:	1f 90       	pop	r1
    11fa:	18 95       	reti

000011fc <__vector_56>:
    11fc:	1f 92       	push	r1
    11fe:	0f 92       	push	r0
    1200:	0f b6       	in	r0, 0x3f	; 63
    1202:	0f 92       	push	r0
    1204:	11 24       	eor	r1, r1
    1206:	0b b6       	in	r0, 0x3b	; 59
    1208:	0f 92       	push	r0
    120a:	2f 93       	push	r18
    120c:	3f 93       	push	r19
    120e:	4f 93       	push	r20
    1210:	5f 93       	push	r21
    1212:	6f 93       	push	r22
    1214:	7f 93       	push	r23
    1216:	8f 93       	push	r24
    1218:	9f 93       	push	r25
    121a:	af 93       	push	r26
    121c:	bf 93       	push	r27
    121e:	ef 93       	push	r30
    1220:	ff 93       	push	r31
    1222:	e0 91 0e 20 	lds	r30, 0x200E	; 0x80200e <tc_tce1_ccb_callback>
    1226:	f0 91 0f 20 	lds	r31, 0x200F	; 0x80200f <tc_tce1_ccb_callback+0x1>
    122a:	30 97       	sbiw	r30, 0x00	; 0
    122c:	09 f0       	breq	.+2      	; 0x1230 <__vector_56+0x34>
    122e:	19 95       	eicall
    1230:	ff 91       	pop	r31
    1232:	ef 91       	pop	r30
    1234:	bf 91       	pop	r27
    1236:	af 91       	pop	r26
    1238:	9f 91       	pop	r25
    123a:	8f 91       	pop	r24
    123c:	7f 91       	pop	r23
    123e:	6f 91       	pop	r22
    1240:	5f 91       	pop	r21
    1242:	4f 91       	pop	r20
    1244:	3f 91       	pop	r19
    1246:	2f 91       	pop	r18
    1248:	0f 90       	pop	r0
    124a:	0b be       	out	0x3b, r0	; 59
    124c:	0f 90       	pop	r0
    124e:	0f be       	out	0x3f, r0	; 63
    1250:	0f 90       	pop	r0
    1252:	1f 90       	pop	r1
    1254:	18 95       	reti

00001256 <__vector_108>:
    1256:	1f 92       	push	r1
    1258:	0f 92       	push	r0
    125a:	0f b6       	in	r0, 0x3f	; 63
    125c:	0f 92       	push	r0
    125e:	11 24       	eor	r1, r1
    1260:	0b b6       	in	r0, 0x3b	; 59
    1262:	0f 92       	push	r0
    1264:	2f 93       	push	r18
    1266:	3f 93       	push	r19
    1268:	4f 93       	push	r20
    126a:	5f 93       	push	r21
    126c:	6f 93       	push	r22
    126e:	7f 93       	push	r23
    1270:	8f 93       	push	r24
    1272:	9f 93       	push	r25
    1274:	af 93       	push	r26
    1276:	bf 93       	push	r27
    1278:	ef 93       	push	r30
    127a:	ff 93       	push	r31
    127c:	e0 91 0c 20 	lds	r30, 0x200C	; 0x80200c <tc_tcf0_ovf_callback>
    1280:	f0 91 0d 20 	lds	r31, 0x200D	; 0x80200d <tc_tcf0_ovf_callback+0x1>
    1284:	30 97       	sbiw	r30, 0x00	; 0
    1286:	09 f0       	breq	.+2      	; 0x128a <__vector_108+0x34>
    1288:	19 95       	eicall
    128a:	ff 91       	pop	r31
    128c:	ef 91       	pop	r30
    128e:	bf 91       	pop	r27
    1290:	af 91       	pop	r26
    1292:	9f 91       	pop	r25
    1294:	8f 91       	pop	r24
    1296:	7f 91       	pop	r23
    1298:	6f 91       	pop	r22
    129a:	5f 91       	pop	r21
    129c:	4f 91       	pop	r20
    129e:	3f 91       	pop	r19
    12a0:	2f 91       	pop	r18
    12a2:	0f 90       	pop	r0
    12a4:	0b be       	out	0x3b, r0	; 59
    12a6:	0f 90       	pop	r0
    12a8:	0f be       	out	0x3f, r0	; 63
    12aa:	0f 90       	pop	r0
    12ac:	1f 90       	pop	r1
    12ae:	18 95       	reti

000012b0 <__vector_109>:
    12b0:	1f 92       	push	r1
    12b2:	0f 92       	push	r0
    12b4:	0f b6       	in	r0, 0x3f	; 63
    12b6:	0f 92       	push	r0
    12b8:	11 24       	eor	r1, r1
    12ba:	0b b6       	in	r0, 0x3b	; 59
    12bc:	0f 92       	push	r0
    12be:	2f 93       	push	r18
    12c0:	3f 93       	push	r19
    12c2:	4f 93       	push	r20
    12c4:	5f 93       	push	r21
    12c6:	6f 93       	push	r22
    12c8:	7f 93       	push	r23
    12ca:	8f 93       	push	r24
    12cc:	9f 93       	push	r25
    12ce:	af 93       	push	r26
    12d0:	bf 93       	push	r27
    12d2:	ef 93       	push	r30
    12d4:	ff 93       	push	r31
    12d6:	e0 91 0a 20 	lds	r30, 0x200A	; 0x80200a <tc_tcf0_err_callback>
    12da:	f0 91 0b 20 	lds	r31, 0x200B	; 0x80200b <tc_tcf0_err_callback+0x1>
    12de:	30 97       	sbiw	r30, 0x00	; 0
    12e0:	09 f0       	breq	.+2      	; 0x12e4 <__vector_109+0x34>
    12e2:	19 95       	eicall
    12e4:	ff 91       	pop	r31
    12e6:	ef 91       	pop	r30
    12e8:	bf 91       	pop	r27
    12ea:	af 91       	pop	r26
    12ec:	9f 91       	pop	r25
    12ee:	8f 91       	pop	r24
    12f0:	7f 91       	pop	r23
    12f2:	6f 91       	pop	r22
    12f4:	5f 91       	pop	r21
    12f6:	4f 91       	pop	r20
    12f8:	3f 91       	pop	r19
    12fa:	2f 91       	pop	r18
    12fc:	0f 90       	pop	r0
    12fe:	0b be       	out	0x3b, r0	; 59
    1300:	0f 90       	pop	r0
    1302:	0f be       	out	0x3f, r0	; 63
    1304:	0f 90       	pop	r0
    1306:	1f 90       	pop	r1
    1308:	18 95       	reti

0000130a <__vector_110>:
    130a:	1f 92       	push	r1
    130c:	0f 92       	push	r0
    130e:	0f b6       	in	r0, 0x3f	; 63
    1310:	0f 92       	push	r0
    1312:	11 24       	eor	r1, r1
    1314:	0b b6       	in	r0, 0x3b	; 59
    1316:	0f 92       	push	r0
    1318:	2f 93       	push	r18
    131a:	3f 93       	push	r19
    131c:	4f 93       	push	r20
    131e:	5f 93       	push	r21
    1320:	6f 93       	push	r22
    1322:	7f 93       	push	r23
    1324:	8f 93       	push	r24
    1326:	9f 93       	push	r25
    1328:	af 93       	push	r26
    132a:	bf 93       	push	r27
    132c:	ef 93       	push	r30
    132e:	ff 93       	push	r31
    1330:	e0 91 08 20 	lds	r30, 0x2008	; 0x802008 <tc_tcf0_cca_callback>
    1334:	f0 91 09 20 	lds	r31, 0x2009	; 0x802009 <tc_tcf0_cca_callback+0x1>
    1338:	30 97       	sbiw	r30, 0x00	; 0
    133a:	09 f0       	breq	.+2      	; 0x133e <__vector_110+0x34>
    133c:	19 95       	eicall
    133e:	ff 91       	pop	r31
    1340:	ef 91       	pop	r30
    1342:	bf 91       	pop	r27
    1344:	af 91       	pop	r26
    1346:	9f 91       	pop	r25
    1348:	8f 91       	pop	r24
    134a:	7f 91       	pop	r23
    134c:	6f 91       	pop	r22
    134e:	5f 91       	pop	r21
    1350:	4f 91       	pop	r20
    1352:	3f 91       	pop	r19
    1354:	2f 91       	pop	r18
    1356:	0f 90       	pop	r0
    1358:	0b be       	out	0x3b, r0	; 59
    135a:	0f 90       	pop	r0
    135c:	0f be       	out	0x3f, r0	; 63
    135e:	0f 90       	pop	r0
    1360:	1f 90       	pop	r1
    1362:	18 95       	reti

00001364 <__vector_111>:
    1364:	1f 92       	push	r1
    1366:	0f 92       	push	r0
    1368:	0f b6       	in	r0, 0x3f	; 63
    136a:	0f 92       	push	r0
    136c:	11 24       	eor	r1, r1
    136e:	0b b6       	in	r0, 0x3b	; 59
    1370:	0f 92       	push	r0
    1372:	2f 93       	push	r18
    1374:	3f 93       	push	r19
    1376:	4f 93       	push	r20
    1378:	5f 93       	push	r21
    137a:	6f 93       	push	r22
    137c:	7f 93       	push	r23
    137e:	8f 93       	push	r24
    1380:	9f 93       	push	r25
    1382:	af 93       	push	r26
    1384:	bf 93       	push	r27
    1386:	ef 93       	push	r30
    1388:	ff 93       	push	r31
    138a:	e0 91 06 20 	lds	r30, 0x2006	; 0x802006 <tc_tcf0_ccb_callback>
    138e:	f0 91 07 20 	lds	r31, 0x2007	; 0x802007 <tc_tcf0_ccb_callback+0x1>
    1392:	30 97       	sbiw	r30, 0x00	; 0
    1394:	09 f0       	breq	.+2      	; 0x1398 <__vector_111+0x34>
    1396:	19 95       	eicall
    1398:	ff 91       	pop	r31
    139a:	ef 91       	pop	r30
    139c:	bf 91       	pop	r27
    139e:	af 91       	pop	r26
    13a0:	9f 91       	pop	r25
    13a2:	8f 91       	pop	r24
    13a4:	7f 91       	pop	r23
    13a6:	6f 91       	pop	r22
    13a8:	5f 91       	pop	r21
    13aa:	4f 91       	pop	r20
    13ac:	3f 91       	pop	r19
    13ae:	2f 91       	pop	r18
    13b0:	0f 90       	pop	r0
    13b2:	0b be       	out	0x3b, r0	; 59
    13b4:	0f 90       	pop	r0
    13b6:	0f be       	out	0x3f, r0	; 63
    13b8:	0f 90       	pop	r0
    13ba:	1f 90       	pop	r1
    13bc:	18 95       	reti

000013be <__vector_112>:
    13be:	1f 92       	push	r1
    13c0:	0f 92       	push	r0
    13c2:	0f b6       	in	r0, 0x3f	; 63
    13c4:	0f 92       	push	r0
    13c6:	11 24       	eor	r1, r1
    13c8:	0b b6       	in	r0, 0x3b	; 59
    13ca:	0f 92       	push	r0
    13cc:	2f 93       	push	r18
    13ce:	3f 93       	push	r19
    13d0:	4f 93       	push	r20
    13d2:	5f 93       	push	r21
    13d4:	6f 93       	push	r22
    13d6:	7f 93       	push	r23
    13d8:	8f 93       	push	r24
    13da:	9f 93       	push	r25
    13dc:	af 93       	push	r26
    13de:	bf 93       	push	r27
    13e0:	ef 93       	push	r30
    13e2:	ff 93       	push	r31
    13e4:	e0 91 04 20 	lds	r30, 0x2004	; 0x802004 <tc_tcf0_ccc_callback>
    13e8:	f0 91 05 20 	lds	r31, 0x2005	; 0x802005 <tc_tcf0_ccc_callback+0x1>
    13ec:	30 97       	sbiw	r30, 0x00	; 0
    13ee:	09 f0       	breq	.+2      	; 0x13f2 <__vector_112+0x34>
    13f0:	19 95       	eicall
    13f2:	ff 91       	pop	r31
    13f4:	ef 91       	pop	r30
    13f6:	bf 91       	pop	r27
    13f8:	af 91       	pop	r26
    13fa:	9f 91       	pop	r25
    13fc:	8f 91       	pop	r24
    13fe:	7f 91       	pop	r23
    1400:	6f 91       	pop	r22
    1402:	5f 91       	pop	r21
    1404:	4f 91       	pop	r20
    1406:	3f 91       	pop	r19
    1408:	2f 91       	pop	r18
    140a:	0f 90       	pop	r0
    140c:	0b be       	out	0x3b, r0	; 59
    140e:	0f 90       	pop	r0
    1410:	0f be       	out	0x3f, r0	; 63
    1412:	0f 90       	pop	r0
    1414:	1f 90       	pop	r1
    1416:	18 95       	reti

00001418 <__vector_113>:
    1418:	1f 92       	push	r1
    141a:	0f 92       	push	r0
    141c:	0f b6       	in	r0, 0x3f	; 63
    141e:	0f 92       	push	r0
    1420:	11 24       	eor	r1, r1
    1422:	0b b6       	in	r0, 0x3b	; 59
    1424:	0f 92       	push	r0
    1426:	2f 93       	push	r18
    1428:	3f 93       	push	r19
    142a:	4f 93       	push	r20
    142c:	5f 93       	push	r21
    142e:	6f 93       	push	r22
    1430:	7f 93       	push	r23
    1432:	8f 93       	push	r24
    1434:	9f 93       	push	r25
    1436:	af 93       	push	r26
    1438:	bf 93       	push	r27
    143a:	ef 93       	push	r30
    143c:	ff 93       	push	r31
    143e:	e0 91 02 20 	lds	r30, 0x2002	; 0x802002 <tc_tcf0_ccd_callback>
    1442:	f0 91 03 20 	lds	r31, 0x2003	; 0x802003 <tc_tcf0_ccd_callback+0x1>
    1446:	30 97       	sbiw	r30, 0x00	; 0
    1448:	09 f0       	breq	.+2      	; 0x144c <__vector_113+0x34>
    144a:	19 95       	eicall
    144c:	ff 91       	pop	r31
    144e:	ef 91       	pop	r30
    1450:	bf 91       	pop	r27
    1452:	af 91       	pop	r26
    1454:	9f 91       	pop	r25
    1456:	8f 91       	pop	r24
    1458:	7f 91       	pop	r23
    145a:	6f 91       	pop	r22
    145c:	5f 91       	pop	r21
    145e:	4f 91       	pop	r20
    1460:	3f 91       	pop	r19
    1462:	2f 91       	pop	r18
    1464:	0f 90       	pop	r0
    1466:	0b be       	out	0x3b, r0	; 59
    1468:	0f 90       	pop	r0
    146a:	0f be       	out	0x3f, r0	; 63
    146c:	0f 90       	pop	r0
    146e:	1f 90       	pop	r1
    1470:	18 95       	reti

00001472 <tc_enable>:
    1472:	1f 93       	push	r17
    1474:	cf 93       	push	r28
    1476:	df 93       	push	r29
    1478:	1f 92       	push	r1
    147a:	1f 92       	push	r1
    147c:	cd b7       	in	r28, 0x3d	; 61
    147e:	de b7       	in	r29, 0x3e	; 62
    1480:	2f b7       	in	r18, 0x3f	; 63
    1482:	2a 83       	std	Y+2, r18	; 0x02
    1484:	f8 94       	cli
    1486:	1a 81       	ldd	r17, Y+2	; 0x02
    1488:	28 2f       	mov	r18, r24
    148a:	39 2f       	mov	r19, r25
    148c:	21 15       	cp	r18, r1
    148e:	88 e0       	ldi	r24, 0x08	; 8
    1490:	38 07       	cpc	r19, r24
    1492:	49 f4       	brne	.+18     	; 0x14a6 <tc_enable+0x34>
    1494:	61 e0       	ldi	r22, 0x01	; 1
    1496:	83 e0       	ldi	r24, 0x03	; 3
    1498:	0e 94 30 01 	call	0x260	; 0x260 <sysclk_enable_module>
    149c:	64 e0       	ldi	r22, 0x04	; 4
    149e:	83 e0       	ldi	r24, 0x03	; 3
    14a0:	0e 94 30 01 	call	0x260	; 0x260 <sysclk_enable_module>
    14a4:	4f c0       	rjmp	.+158    	; 0x1544 <tc_enable+0xd2>
    14a6:	20 34       	cpi	r18, 0x40	; 64
    14a8:	88 e0       	ldi	r24, 0x08	; 8
    14aa:	38 07       	cpc	r19, r24
    14ac:	49 f4       	brne	.+18     	; 0x14c0 <tc_enable+0x4e>
    14ae:	62 e0       	ldi	r22, 0x02	; 2
    14b0:	83 e0       	ldi	r24, 0x03	; 3
    14b2:	0e 94 30 01 	call	0x260	; 0x260 <sysclk_enable_module>
    14b6:	64 e0       	ldi	r22, 0x04	; 4
    14b8:	83 e0       	ldi	r24, 0x03	; 3
    14ba:	0e 94 30 01 	call	0x260	; 0x260 <sysclk_enable_module>
    14be:	42 c0       	rjmp	.+132    	; 0x1544 <tc_enable+0xd2>
    14c0:	21 15       	cp	r18, r1
    14c2:	89 e0       	ldi	r24, 0x09	; 9
    14c4:	38 07       	cpc	r19, r24
    14c6:	49 f4       	brne	.+18     	; 0x14da <tc_enable+0x68>
    14c8:	61 e0       	ldi	r22, 0x01	; 1
    14ca:	84 e0       	ldi	r24, 0x04	; 4
    14cc:	0e 94 30 01 	call	0x260	; 0x260 <sysclk_enable_module>
    14d0:	64 e0       	ldi	r22, 0x04	; 4
    14d2:	84 e0       	ldi	r24, 0x04	; 4
    14d4:	0e 94 30 01 	call	0x260	; 0x260 <sysclk_enable_module>
    14d8:	35 c0       	rjmp	.+106    	; 0x1544 <tc_enable+0xd2>
    14da:	20 34       	cpi	r18, 0x40	; 64
    14dc:	89 e0       	ldi	r24, 0x09	; 9
    14de:	38 07       	cpc	r19, r24
    14e0:	49 f4       	brne	.+18     	; 0x14f4 <tc_enable+0x82>
    14e2:	62 e0       	ldi	r22, 0x02	; 2
    14e4:	84 e0       	ldi	r24, 0x04	; 4
    14e6:	0e 94 30 01 	call	0x260	; 0x260 <sysclk_enable_module>
    14ea:	64 e0       	ldi	r22, 0x04	; 4
    14ec:	84 e0       	ldi	r24, 0x04	; 4
    14ee:	0e 94 30 01 	call	0x260	; 0x260 <sysclk_enable_module>
    14f2:	28 c0       	rjmp	.+80     	; 0x1544 <tc_enable+0xd2>
    14f4:	21 15       	cp	r18, r1
    14f6:	8a e0       	ldi	r24, 0x0A	; 10
    14f8:	38 07       	cpc	r19, r24
    14fa:	49 f4       	brne	.+18     	; 0x150e <tc_enable+0x9c>
    14fc:	61 e0       	ldi	r22, 0x01	; 1
    14fe:	85 e0       	ldi	r24, 0x05	; 5
    1500:	0e 94 30 01 	call	0x260	; 0x260 <sysclk_enable_module>
    1504:	64 e0       	ldi	r22, 0x04	; 4
    1506:	85 e0       	ldi	r24, 0x05	; 5
    1508:	0e 94 30 01 	call	0x260	; 0x260 <sysclk_enable_module>
    150c:	1b c0       	rjmp	.+54     	; 0x1544 <tc_enable+0xd2>
    150e:	20 34       	cpi	r18, 0x40	; 64
    1510:	8a e0       	ldi	r24, 0x0A	; 10
    1512:	38 07       	cpc	r19, r24
    1514:	49 f4       	brne	.+18     	; 0x1528 <tc_enable+0xb6>
    1516:	62 e0       	ldi	r22, 0x02	; 2
    1518:	85 e0       	ldi	r24, 0x05	; 5
    151a:	0e 94 30 01 	call	0x260	; 0x260 <sysclk_enable_module>
    151e:	64 e0       	ldi	r22, 0x04	; 4
    1520:	85 e0       	ldi	r24, 0x05	; 5
    1522:	0e 94 30 01 	call	0x260	; 0x260 <sysclk_enable_module>
    1526:	0e c0       	rjmp	.+28     	; 0x1544 <tc_enable+0xd2>
    1528:	21 15       	cp	r18, r1
    152a:	3b 40       	sbci	r19, 0x0B	; 11
    152c:	49 f4       	brne	.+18     	; 0x1540 <tc_enable+0xce>
    152e:	61 e0       	ldi	r22, 0x01	; 1
    1530:	86 e0       	ldi	r24, 0x06	; 6
    1532:	0e 94 30 01 	call	0x260	; 0x260 <sysclk_enable_module>
    1536:	64 e0       	ldi	r22, 0x04	; 4
    1538:	86 e0       	ldi	r24, 0x06	; 6
    153a:	0e 94 30 01 	call	0x260	; 0x260 <sysclk_enable_module>
    153e:	02 c0       	rjmp	.+4      	; 0x1544 <tc_enable+0xd2>
    1540:	1f bf       	out	0x3f, r17	; 63
    1542:	10 c0       	rjmp	.+32     	; 0x1564 <tc_enable+0xf2>
    1544:	80 91 51 20 	lds	r24, 0x2051	; 0x802051 <sleepmgr_locks+0x1>
    1548:	8f 3f       	cpi	r24, 0xFF	; 255
    154a:	09 f4       	brne	.+2      	; 0x154e <tc_enable+0xdc>
    154c:	ff cf       	rjmp	.-2      	; 0x154c <tc_enable+0xda>
    154e:	8f b7       	in	r24, 0x3f	; 63
    1550:	89 83       	std	Y+1, r24	; 0x01
    1552:	f8 94       	cli
    1554:	99 81       	ldd	r25, Y+1	; 0x01
    1556:	e0 e5       	ldi	r30, 0x50	; 80
    1558:	f0 e2       	ldi	r31, 0x20	; 32
    155a:	81 81       	ldd	r24, Z+1	; 0x01
    155c:	8f 5f       	subi	r24, 0xFF	; 255
    155e:	81 83       	std	Z+1, r24	; 0x01
    1560:	9f bf       	out	0x3f, r25	; 63
    1562:	1f bf       	out	0x3f, r17	; 63
    1564:	0f 90       	pop	r0
    1566:	0f 90       	pop	r0
    1568:	df 91       	pop	r29
    156a:	cf 91       	pop	r28
    156c:	1f 91       	pop	r17
    156e:	08 95       	ret

00001570 <tc_set_cca_interrupt_callback>:
}

void tc_set_cca_interrupt_callback(volatile void *tc, tc_callback_t callback)
{
#ifdef TCC0
	if ((uintptr_t) tc == (uintptr_t) & TCC0) {
    1570:	81 15       	cp	r24, r1
    1572:	28 e0       	ldi	r18, 0x08	; 8
    1574:	92 07       	cpc	r25, r18
    1576:	29 f4       	brne	.+10     	; 0x1582 <tc_set_cca_interrupt_callback+0x12>
		tc_tcc0_cca_callback = callback;
    1578:	60 93 44 20 	sts	0x2044, r22	; 0x802044 <tc_tcc0_cca_callback>
    157c:	70 93 45 20 	sts	0x2045, r23	; 0x802045 <tc_tcc0_cca_callback+0x1>
    1580:	08 95       	ret
	} else
#endif
#ifdef TCC1
	if ((uintptr_t) tc == (uintptr_t) & TCC1) {
    1582:	80 34       	cpi	r24, 0x40	; 64
    1584:	28 e0       	ldi	r18, 0x08	; 8
    1586:	92 07       	cpc	r25, r18
    1588:	29 f4       	brne	.+10     	; 0x1594 <tc_set_cca_interrupt_callback+0x24>
		tc_tcc1_cca_callback = callback;
    158a:	60 93 38 20 	sts	0x2038, r22	; 0x802038 <tc_tcc1_cca_callback>
    158e:	70 93 39 20 	sts	0x2039, r23	; 0x802039 <tc_tcc1_cca_callback+0x1>
    1592:	08 95       	ret
	} else
#endif
#ifdef TCD0
	if ((uintptr_t) tc == (uintptr_t) & TCD0) {
    1594:	81 15       	cp	r24, r1
    1596:	29 e0       	ldi	r18, 0x09	; 9
    1598:	92 07       	cpc	r25, r18
    159a:	29 f4       	brne	.+10     	; 0x15a6 <tc_set_cca_interrupt_callback+0x36>
		tc_tcd0_cca_callback = callback;
    159c:	60 93 30 20 	sts	0x2030, r22	; 0x802030 <tc_tcd0_cca_callback>
    15a0:	70 93 31 20 	sts	0x2031, r23	; 0x802031 <tc_tcd0_cca_callback+0x1>
    15a4:	08 95       	ret
	} else
#endif
#ifdef TCD1
	if ((uintptr_t) tc == (uintptr_t) & TCD1) {
    15a6:	80 34       	cpi	r24, 0x40	; 64
    15a8:	29 e0       	ldi	r18, 0x09	; 9
    15aa:	92 07       	cpc	r25, r18
    15ac:	29 f4       	brne	.+10     	; 0x15b8 <tc_set_cca_interrupt_callback+0x48>
		tc_tcd1_cca_callback = callback;
    15ae:	60 93 24 20 	sts	0x2024, r22	; 0x802024 <tc_tcd1_cca_callback>
    15b2:	70 93 25 20 	sts	0x2025, r23	; 0x802025 <tc_tcd1_cca_callback+0x1>
    15b6:	08 95       	ret
	} else
#endif
#ifdef TCE0
	if ((uintptr_t) tc == (uintptr_t) & TCE0) {
    15b8:	81 15       	cp	r24, r1
    15ba:	2a e0       	ldi	r18, 0x0A	; 10
    15bc:	92 07       	cpc	r25, r18
    15be:	29 f4       	brne	.+10     	; 0x15ca <tc_set_cca_interrupt_callback+0x5a>
		tc_tce0_cca_callback = callback;
    15c0:	60 93 1c 20 	sts	0x201C, r22	; 0x80201c <tc_tce0_cca_callback>
    15c4:	70 93 1d 20 	sts	0x201D, r23	; 0x80201d <tc_tce0_cca_callback+0x1>
    15c8:	08 95       	ret
	} else
#endif
#ifdef TCE1
	if ((uintptr_t) tc == (uintptr_t) & TCE1) {
    15ca:	80 34       	cpi	r24, 0x40	; 64
    15cc:	2a e0       	ldi	r18, 0x0A	; 10
    15ce:	92 07       	cpc	r25, r18
    15d0:	29 f4       	brne	.+10     	; 0x15dc <tc_set_cca_interrupt_callback+0x6c>
		tc_tce1_cca_callback = callback;
    15d2:	60 93 10 20 	sts	0x2010, r22	; 0x802010 <tc_tce1_cca_callback>
    15d6:	70 93 11 20 	sts	0x2011, r23	; 0x802011 <tc_tce1_cca_callback+0x1>
    15da:	08 95       	ret
	} else
#endif
#ifdef TCF0
	if ((uintptr_t) tc == (uintptr_t) & TCF0) {
    15dc:	81 15       	cp	r24, r1
    15de:	9b 40       	sbci	r25, 0x0B	; 11
    15e0:	21 f4       	brne	.+8      	; 0x15ea <tc_set_cca_interrupt_callback+0x7a>
		tc_tcf0_cca_callback = callback;
    15e2:	60 93 08 20 	sts	0x2008, r22	; 0x802008 <tc_tcf0_cca_callback>
    15e6:	70 93 09 20 	sts	0x2009, r23	; 0x802009 <tc_tcf0_cca_callback+0x1>
    15ea:	08 95       	ret

000015ec <example_cca_interrupt_callback>:
 /************************************************************************/
 /* Interrupt function that reads from the ADC and adds					  /
 /*  them up. After 1000 reads they are divided by 1000.				  /
 /************************************************************************/
 static void example_cca_interrupt_callback(void)
 {
    15ec:	cf 93       	push	r28
    15ee:	df 93       	push	r29
    15f0:	1f 92       	push	r1
    15f2:	cd b7       	in	r28, 0x3d	; 61
    15f4:	de b7       	in	r29, 0x3e	; 62

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = SREG;
    15f6:	8f b7       	in	r24, 0x3f	; 63
    15f8:	89 83       	std	Y+1, r24	; 0x01
	cpu_irq_disable();
    15fa:	f8 94       	cli
	return flags;
    15fc:	99 81       	ldd	r25, Y+1	; 0x01
 */
static inline void adc_start_conversion(ADC_t *adc, uint8_t ch_mask)
{
	irqflags_t flags = cpu_irq_save();
#if !XMEGA_E
	adc->CTRLA |= ch_mask << ADC_CH0START_bp;
    15fe:	e0 e0       	ldi	r30, 0x00	; 0
    1600:	f2 e0       	ldi	r31, 0x02	; 2
    1602:	80 81       	ld	r24, Z
    1604:	84 60       	ori	r24, 0x04	; 4
    1606:	80 83       	st	Z, r24
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
    1608:	9f bf       	out	0x3f, r25	; 63
	adc_start_conversion(&ADCA, ADC_CH0);
	/*First read set the pin high*/
	 if(counter==0) {
    160a:	80 91 4a 20 	lds	r24, 0x204A	; 0x80204a <counter>
    160e:	90 91 4b 20 	lds	r25, 0x204B	; 0x80204b <counter+0x1>
    1612:	00 97       	sbiw	r24, 0x00	; 0
    1614:	11 f5       	brne	.+68     	; 0x165a <example_cca_interrupt_callback+0x6e>

__always_inline static void arch_ioport_toggle_pin_level(ioport_pin_t pin)
{
	PORT_t *base = arch_ioport_pin_to_base(pin);

	base->OUTTGL = arch_ioport_pin_to_mask(pin);
    1616:	82 e0       	ldi	r24, 0x02	; 2
    1618:	80 93 47 06 	sts	0x0647, r24	; 0x800647 <__TEXT_REGION_LENGTH__+0x700647>
		ioport_toggle_pin(J1_PIN1);
	 }
	 uint32_t invalue, outvalue;
	 counter++; 
    161c:	81 e0       	ldi	r24, 0x01	; 1
    161e:	90 e0       	ldi	r25, 0x00	; 0
    1620:	80 93 4a 20 	sts	0x204A, r24	; 0x80204a <counter>
    1624:	90 93 4b 20 	sts	0x204B, r25	; 0x80204b <counter+0x1>
	 invalue = ADCA_CH0RES;
    1628:	20 91 10 02 	lds	r18, 0x0210	; 0x800210 <__TEXT_REGION_LENGTH__+0x700210>
    162c:	30 91 11 02 	lds	r19, 0x0211	; 0x800211 <__TEXT_REGION_LENGTH__+0x700211>
	 /*Add up the values*/
	 sum = sum + invalue;
    1630:	80 91 4c 20 	lds	r24, 0x204C	; 0x80204c <sum>
    1634:	90 91 4d 20 	lds	r25, 0x204D	; 0x80204d <sum+0x1>
    1638:	a0 91 4e 20 	lds	r26, 0x204E	; 0x80204e <sum+0x2>
    163c:	b0 91 4f 20 	lds	r27, 0x204F	; 0x80204f <sum+0x3>
    1640:	82 0f       	add	r24, r18
    1642:	93 1f       	adc	r25, r19
    1644:	a1 1d       	adc	r26, r1
    1646:	b1 1d       	adc	r27, r1
    1648:	80 93 4c 20 	sts	0x204C, r24	; 0x80204c <sum>
    164c:	90 93 4d 20 	sts	0x204D, r25	; 0x80204d <sum+0x1>
    1650:	a0 93 4e 20 	sts	0x204E, r26	; 0x80204e <sum+0x2>
    1654:	b0 93 4f 20 	sts	0x204F, r27	; 0x80204f <sum+0x3>
    1658:	27 c0       	rjmp	.+78     	; 0x16a8 <example_cca_interrupt_callback+0xbc>
	/*First read set the pin high*/
	 if(counter==0) {
		ioport_toggle_pin(J1_PIN1);
	 }
	 uint32_t invalue, outvalue;
	 counter++; 
    165a:	01 96       	adiw	r24, 0x01	; 1
    165c:	80 93 4a 20 	sts	0x204A, r24	; 0x80204a <counter>
    1660:	90 93 4b 20 	sts	0x204B, r25	; 0x80204b <counter+0x1>
	 invalue = ADCA_CH0RES;
    1664:	20 91 10 02 	lds	r18, 0x0210	; 0x800210 <__TEXT_REGION_LENGTH__+0x700210>
    1668:	30 91 11 02 	lds	r19, 0x0211	; 0x800211 <__TEXT_REGION_LENGTH__+0x700211>
	 /*Add up the values*/
	 sum = sum + invalue;
    166c:	40 91 4c 20 	lds	r20, 0x204C	; 0x80204c <sum>
    1670:	50 91 4d 20 	lds	r21, 0x204D	; 0x80204d <sum+0x1>
    1674:	60 91 4e 20 	lds	r22, 0x204E	; 0x80204e <sum+0x2>
    1678:	70 91 4f 20 	lds	r23, 0x204F	; 0x80204f <sum+0x3>
    167c:	42 0f       	add	r20, r18
    167e:	53 1f       	adc	r21, r19
    1680:	61 1d       	adc	r22, r1
    1682:	71 1d       	adc	r23, r1
    1684:	40 93 4c 20 	sts	0x204C, r20	; 0x80204c <sum>
    1688:	50 93 4d 20 	sts	0x204D, r21	; 0x80204d <sum+0x1>
    168c:	60 93 4e 20 	sts	0x204E, r22	; 0x80204e <sum+0x2>
    1690:	70 93 4f 20 	sts	0x204F, r23	; 0x80204f <sum+0x3>
	 /*When 1000 values divide sum by 1000, restart counter and set pin low */
	 if(counter==1000){
    1694:	88 3e       	cpi	r24, 0xE8	; 232
    1696:	93 40       	sbci	r25, 0x03	; 3
    1698:	39 f4       	brne	.+14     	; 0x16a8 <example_cca_interrupt_callback+0xbc>
		outvalue=sum/1000;
		counter=0;
    169a:	10 92 4a 20 	sts	0x204A, r1	; 0x80204a <counter>
    169e:	10 92 4b 20 	sts	0x204B, r1	; 0x80204b <counter+0x1>
    16a2:	82 e0       	ldi	r24, 0x02	; 2
    16a4:	80 93 47 06 	sts	0x0647, r24	; 0x800647 <__TEXT_REGION_LENGTH__+0x700647>
		ioport_toggle_pin(J1_PIN1);
	 }	  
 }
    16a8:	0f 90       	pop	r0
    16aa:	df 91       	pop	r29
    16ac:	cf 91       	pop	r28
    16ae:	08 95       	ret

000016b0 <config_timer>:
 /************************************************************************/
 /* Setting up the timer to do interrupts every 10 ms                    */
 /************************************************************************/
 void config_timer(){
	tc_enable(&TIMER_EXAMPLE);
    16b0:	80 e0       	ldi	r24, 0x00	; 0
    16b2:	98 e0       	ldi	r25, 0x08	; 8
    16b4:	de de       	rcall	.-580    	; 0x1472 <tc_enable>
	tc_set_cca_interrupt_callback(&TIMER_EXAMPLE,
    16b6:	66 ef       	ldi	r22, 0xF6	; 246
    16b8:	7a e0       	ldi	r23, 0x0A	; 10
    16ba:	80 e0       	ldi	r24, 0x00	; 0
    16bc:	98 e0       	ldi	r25, 0x08	; 8
    16be:	58 df       	rcall	.-336    	; 0x1570 <tc_set_cca_interrupt_callback>
 * \param tc Pointer to TC module.
 * \param wgm : waveform generator
 */
static inline void tc_set_wgm(volatile void *tc, enum tc_wg_mode_t wgm)
{
	((TC0_t *)tc)->CTRLB = (((TC0_t *)tc)->CTRLB & ~TC0_WGMODE_gm) | wgm;
    16c0:	e0 e0       	ldi	r30, 0x00	; 0
    16c2:	f8 e0       	ldi	r31, 0x08	; 8
    16c4:	81 81       	ldd	r24, Z+1	; 0x01
    16c6:	88 7f       	andi	r24, 0xF8	; 248
    16c8:	81 83       	std	Z+1, r24	; 0x01
 * \param tc Pointer to TC module.
 * \param per_value Period value : PER
 */
static inline void tc_write_period(volatile void *tc, uint16_t per_value)
{
	((TC0_t *)tc)->PER = per_value;
    16ca:	88 e3       	ldi	r24, 0x38	; 56
    16cc:	91 e0       	ldi	r25, 0x01	; 1
    16ce:	86 a3       	std	Z+38, r24	; 0x26
    16d0:	97 a3       	std	Z+39, r25	; 0x27
		enum tc_cc_channel_t channel_index, uint16_t value)
{
	if (tc_is_tc0(void *tc)) {
		switch (channel_index) {
		case TC_CCA:
			((TC0_t *)tc)->CCA = value;
    16d2:	80 a7       	std	Z+40, r24	; 0x28
    16d4:	91 a7       	std	Z+41, r25	; 0x29
 */
static inline void tc_enable_cc_channels(volatile void *tc,
		enum tc_cc_channel_mask_enable_t enablemask)
{
	if (tc_is_tc0(void *tc)) {
		((TC0_t *)tc)->CTRLB |= enablemask;
    16d6:	81 81       	ldd	r24, Z+1	; 0x01
    16d8:	80 61       	ori	r24, 0x10	; 16
    16da:	81 83       	std	Z+1, r24	; 0x01
 * \note Configures CCAINTLVL in INTCTRLB
 */
static inline void tc_set_cca_interrupt_level(volatile void *tc,
		enum TC_INT_LEVEL_t level)
{
	((TC0_t *)tc)->INTCTRLB = ((TC0_t *)tc)->INTCTRLB & ~TC0_CCAINTLVL_gm;
    16dc:	87 81       	ldd	r24, Z+7	; 0x07
    16de:	8c 7f       	andi	r24, 0xFC	; 252
    16e0:	87 83       	std	Z+7, r24	; 0x07
	((TC0_t *)tc)->INTCTRLB =
			((TC0_t *)tc)->INTCTRLB | (level << TC0_CCAINTLVL_gp);
    16e2:	87 81       	ldd	r24, Z+7	; 0x07
 */
static inline void tc_set_cca_interrupt_level(volatile void *tc,
		enum TC_INT_LEVEL_t level)
{
	((TC0_t *)tc)->INTCTRLB = ((TC0_t *)tc)->INTCTRLB & ~TC0_CCAINTLVL_gm;
	((TC0_t *)tc)->INTCTRLB =
    16e4:	81 60       	ori	r24, 0x01	; 1
    16e6:	87 83       	std	Z+7, r24	; 0x07
 */
static inline void tc_write_clock_source(volatile void *tc,
		TC_CLKSEL_t TC_CLKSEL_enum)
{
	((TC0_t *)tc)->CTRLA =
			(((TC0_t *)tc)->CTRLA & ~TC0_CLKSEL_gm) |
    16e8:	80 81       	ld	r24, Z
 * \note Configuring the clock also starts the timer
 */
static inline void tc_write_clock_source(volatile void *tc,
		TC_CLKSEL_t TC_CLKSEL_enum)
{
	((TC0_t *)tc)->CTRLA =
    16ea:	80 7f       	andi	r24, 0xF0	; 240
    16ec:	85 60       	ori	r24, 0x05	; 5
    16ee:	80 83       	st	Z, r24
    16f0:	08 95       	ret

000016f2 <main>:
 * Enables all interrupt levels, with vectors located in the application section
 * and fixed priority scheduling.
 */
static inline void pmic_init(void)
{
	PMIC.CTRL = PMIC_LVL_LOW | PMIC_LVL_MEDIUM |
    16f2:	c7 e0       	ldi	r28, 0x07	; 7
    16f4:	c0 93 a2 00 	sts	0x00A2, r28	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7000a2>

int main (void)
{
	/*Setup system*/
	pmic_init();
	board_init();
    16f8:	0e 94 6d 01 	call	0x2da	; 0x2da <board_init>
	sysclk_init();
    16fc:	0e 94 20 01 	call	0x240	; 0x240 <sysclk_init>

/************************************************************************/
/* Disable JTAG to lower power consumption                              */
/************************************************************************/
static void disable_JTAG(void){
	CCP = CCP_IOREG_gc;
    1700:	88 ed       	ldi	r24, 0xD8	; 216
    1702:	84 bf       	out	0x34, r24	; 52
	MCU.MCUCR=MCU_JTAGD_bm;
    1704:	81 e0       	ldi	r24, 0x01	; 1
    1706:	80 93 96 00 	sts	0x0096, r24	; 0x800096 <__TEXT_REGION_LENGTH__+0x700096>

/************************************************************************/
/* Disable unused peripherals to save power                             */
/************************************************************************/
static void disable_peripherals(void){
	PR.PRGEN=PR_USB_bm | PR_AES_bm  | PR_EVSYS_bm | PR_DMA_bm | PR_RTC_bm ;
    170a:	e0 e7       	ldi	r30, 0x70	; 112
    170c:	f0 e0       	ldi	r31, 0x00	; 0
    170e:	87 e5       	ldi	r24, 0x57	; 87
    1710:	80 83       	st	Z, r24

	PR.PRPA=PR_DAC_bm | PR_AC_bm;
    1712:	85 e0       	ldi	r24, 0x05	; 5
    1714:	81 83       	std	Z+1, r24	; 0x01
	PR.PRPB=PR_DAC_bm | PR_AC_bm | PR_ADC_bm;
    1716:	c2 83       	std	Z+2, r28	; 0x02

	PR.PRPC= PR_TWI_bm | PR_USART0_bm | PR_USART1_bm | PR_SPI_bm | PR_HIRES_bm |  PR_TC1_bm;
    1718:	9e e7       	ldi	r25, 0x7E	; 126
    171a:	93 83       	std	Z+3, r25	; 0x03
	PR.PRPD= PR_TWI_bm | PR_USART0_bm | PR_USART1_bm | PR_SPI_bm | PR_HIRES_bm | PR_TC0_bm | PR_TC1_bm;
    171c:	8f e7       	ldi	r24, 0x7F	; 127
    171e:	84 83       	std	Z+4, r24	; 0x04
	PR.PRPE= PR_TWI_bm | PR_USART0_bm | PR_USART1_bm | PR_SPI_bm | PR_HIRES_bm |  PR_TC1_bm;
    1720:	95 83       	std	Z+5, r25	; 0x05
	PR.PRPF= PR_TWI_bm | PR_USART0_bm | PR_USART1_bm | PR_SPI_bm | PR_HIRES_bm | PR_TC0_bm | PR_TC1_bm;
    1722:	86 83       	std	Z+6, r24	; 0x06
	sysclk_init();
	/*Disable JTAG and other peripherals not used to save power*/
	disable_JTAG();
	disable_peripherals();
	/*Initialize ADC*/
	adc_enable(&ADCA);
    1724:	80 e0       	ldi	r24, 0x00	; 0
    1726:	92 e0       	ldi	r25, 0x02	; 2
    1728:	0e 94 29 02 	call	0x452	; 0x452 <adc_enable>
	/*Initialize interrupts */		
	cpu_irq_enable();
	/*Initialize TC-timer*/
	config_timer();
    172c:	78 94       	sei
		enum ioport_direction dir)
{
	PORT_t *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->DIRSET = arch_ioport_pin_to_mask(pin);
    172e:	c0 df       	rcall	.-128    	; 0x16b0 <config_timer>
    1730:	82 e0       	ldi	r24, 0x02	; 2
    1732:	80 93 41 06 	sts	0x0641, r24	; 0x800641 <__TEXT_REGION_LENGTH__+0x700641>
	/*Set pin as output*/
	ioport_set_pin_dir(J1_PIN1, IOPORT_DIR_OUTPUT);
	/*Setting the sleep mode*/
	set_sleep_mode(SLEEP_MODE_IDLE);
    1736:	e8 e4       	ldi	r30, 0x48	; 72
    1738:	f0 e0       	ldi	r31, 0x00	; 0
    173a:	80 81       	ld	r24, Z
    173c:	81 7f       	andi	r24, 0xF1	; 241
	sleep_enable();
    173e:	80 83       	st	Z, r24
    1740:	80 81       	ld	r24, Z
    1742:	81 60       	ori	r24, 0x01	; 1

	while(1){
	sleep_cpu();
    1744:	80 83       	st	Z, r24
    1746:	88 95       	sleep
    1748:	fe cf       	rjmp	.-4      	; 0x1746 <main+0x54>

0000174a <_exit>:
    174a:	f8 94       	cli

0000174c <__stop_program>:
    174c:	ff cf       	rjmp	.-2      	; 0x174c <__stop_program>
